Watching for file changes with StatReloader
D:\PycharmProjects\Django_Test\Django_Test\settings.py changed, reloading.
Watching for file changes with StatReloader
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) 
            SELECT
                table_name,
                table_type,
                table_comment
            FROM information_schema.tables
            WHERE table_schema = DATABASE()
            ; args=None; alias=default
(0.000) SELECT `django_migrations`.`id`, `django_migrations`.`app`, `django_migrations`.`name`, `django_migrations`.`applied` FROM `django_migrations`; args=(); alias=default
D:\PycharmProjects\Django_Test\Django_Test\settings.py changed, reloading.
Watching for file changes with StatReloader
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) 
            SELECT
                table_name,
                table_type,
                table_comment
            FROM information_schema.tables
            WHERE table_schema = DATABASE()
            ; args=None; alias=default
(0.000) SELECT `django_migrations`.`id`, `django_migrations`.`app`, `django_migrations`.`name`, `django_migrations`.`applied` FROM `django_migrations`; args=(); alias=default
D:\PycharmProjects\Django_Test\Django_Test\settings.py changed, reloading.
Watching for file changes with StatReloader
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) 
            SELECT
                table_name,
                table_type,
                table_comment
            FROM information_schema.tables
            WHERE table_schema = DATABASE()
            ; args=None; alias=default
(0.000) SELECT `django_migrations`.`id`, `django_migrations`.`app`, `django_migrations`.`name`, `django_migrations`.`applied` FROM `django_migrations`; args=(); alias=default
Not Found: /
Not Found: /favicon.ico
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.016) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 37 LIMIT 21; args=(37,); alias=default
(0.016) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` LIMIT 21; args=(); alias=default
Internal Server Error: /edit_book/37/
Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\Anaconda\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\PycharmProjects\Django_Test\app_test\books.py", line 114, in edit_book
    book = Book.objects.get(book_id=book_id)
  File "D:\Anaconda\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda\lib\site-packages\django\db\models\query.py", line 637, in get
    raise self.model.DoesNotExist(
app_test.models.Book.DoesNotExist: Book matching query does not exist.
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.015) INSERT INTO `book` (`book_title`, `category_id`, `author`, `book_copies`, `book_pub`, `publisher_name`, `isbn`, `copyright_year`, `date_receive`, `date_added`, `status`) VALUES ('hello-change', 2, 'hello', 3, 'world', 'world', 'hello-world', 7, '', '2013-12-11 06:47:11', 'New'); args=['hello-change', 2, 'hello', 3, 'world', 'world', 'hello-world', 7, '', '2013-12-11 06:47:11', 'New']; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 38 LIMIT 21; args=(38,); alias=default
Internal Server Error: /edit_book/38/
Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\template\base.py", line 505, in parse
    compile_func = self.tags[command]
KeyError: 'static'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\Anaconda\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\PycharmProjects\Django_Test\app_test\books.py", line 145, in edit_book
    return render(request, 'edit_book.html', {'form': form, 'book_id': book_id})
  File "D:\Anaconda\lib\site-packages\django\shortcuts.py", line 24, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "D:\Anaconda\lib\site-packages\django\template\loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "D:\Anaconda\lib\site-packages\django\template\loader.py", line 15, in get_template
    return engine.get_template(template_name)
  File "D:\Anaconda\lib\site-packages\django\template\backends\django.py", line 33, in get_template
    return Template(self.engine.get_template(template_name), self)
  File "D:\Anaconda\lib\site-packages\django\template\engine.py", line 175, in get_template
    template, origin = self.find_template(template_name)
  File "D:\Anaconda\lib\site-packages\django\template\engine.py", line 157, in find_template
    template = loader.get_template(name, skip=skip)
  File "D:\Anaconda\lib\site-packages\django\template\loaders\cached.py", line 57, in get_template
    template = super().get_template(template_name, skip)
  File "D:\Anaconda\lib\site-packages\django\template\loaders\base.py", line 28, in get_template
    return Template(
  File "D:\Anaconda\lib\site-packages\django\template\base.py", line 154, in __init__
    self.nodelist = self.compile_nodelist()
  File "D:\Anaconda\lib\site-packages\django\template\base.py", line 200, in compile_nodelist
    return parser.parse()
  File "D:\Anaconda\lib\site-packages\django\template\base.py", line 513, in parse
    raise self.error(token, e)
  File "D:\Anaconda\lib\site-packages\django\template\base.py", line 511, in parse
    compiled_result = compile_func(self, token)
  File "D:\Anaconda\lib\site-packages\django\template\loader_tags.py", line 293, in do_extends
    nodelist = parser.parse()
  File "D:\Anaconda\lib\site-packages\django\template\base.py", line 513, in parse
    raise self.error(token, e)
  File "D:\Anaconda\lib\site-packages\django\template\base.py", line 511, in parse
    compiled_result = compile_func(self, token)
  File "D:\Anaconda\lib\site-packages\django\template\loader_tags.py", line 232, in do_block
    nodelist = parser.parse(("endblock",))
  File "D:\Anaconda\lib\site-packages\django\template\base.py", line 507, in parse
    self.invalid_block_tag(token, command, parse_until)
  File "D:\Anaconda\lib\site-packages\django\template\base.py", line 558, in invalid_block_tag
    raise self.error(
django.template.exceptions.TemplateSyntaxError: Invalid block tag on line 4: 'static', expected 'endblock'. Did you forget to register or load this tag?
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 38 LIMIT 21; args=(38,); alias=default
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/css/bootstrap.css
Not Found: /edit_book/static/js/jquery-3.7.0.min.js
Not Found: /edit_book/static/plugins/font-awesome-4.7.0/css/font-awesome.css
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/js/bootstrap.min.js
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 38 LIMIT 21; args=(38,); alias=default
Not Found: /delete_book/static/plugins/font-awesome-4.7.0/css/font-awesome.css
Not Found: /delete_book/static/plugins/bootstrap-3.4.1/css/bootstrap.css
Not Found: /delete_book/static/js/jquery-3.7.0.min.js
Not Found: /delete_book/static/plugins/bootstrap-3.4.1/js/bootstrap.min.js
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `member`.`member_id`, `member`.`firstname`, `member`.`lastname`, `member`.`gender`, `member`.`address`, `member`.`contact`, `member`.`type`, `member`.`year_level`, `member`.`status` FROM `member`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 38 LIMIT 21; args=(38,); alias=default
Not Found: /edit_book/static/plugins/font-awesome-4.7.0/css/font-awesome.css
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/js/bootstrap.min.js
Not Found: /edit_book/static/js/jquery-3.7.0.min.js
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/css/bootstrap.css
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 38 LIMIT 21; args=(38,); alias=default
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/js/bootstrap.min.js
Not Found: /edit_book/static/js/jquery-3.7.0.min.js
Not Found: /edit_book/static/plugins/font-awesome-4.7.0/css/font-awesome.css
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/css/bootstrap.css
(0.015) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 38 LIMIT 21; args=(38,); alias=default
Not Found: /delete_book/static/js/jquery-3.7.0.min.js
Not Found: /delete_book/static/plugins/font-awesome-4.7.0/css/font-awesome.css
Not Found: /delete_book/static/plugins/bootstrap-3.4.1/js/bootstrap.min.js
Not Found: /delete_book/static/plugins/bootstrap-3.4.1/css/bootstrap.css
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `member`.`member_id`, `member`.`firstname`, `member`.`lastname`, `member`.`gender`, `member`.`address`, `member`.`contact`, `member`.`type`, `member`.`year_level`, `member`.`status` FROM `member`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 38 LIMIT 21; args=(38,); alias=default
Not Found: /delete_book/static/plugins/font-awesome-4.7.0/css/font-awesome.css
Not Found: /delete_book/static/plugins/bootstrap-3.4.1/css/bootstrap.css
Not Found: /delete_book/static/js/jquery-3.7.0.min.js
Not Found: /delete_book/static/plugins/bootstrap-3.4.1/js/bootstrap.min.js
Watching for file changes with StatReloader
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) 
            SELECT
                table_name,
                table_type,
                table_comment
            FROM information_schema.tables
            WHERE table_schema = DATABASE()
            ; args=None; alias=default
(0.000) SELECT `django_migrations`.`id`, `django_migrations`.`app`, `django_migrations`.`name`, `django_migrations`.`applied` FROM `django_migrations`; args=(); alias=default
Not Found: /
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
Watching for file changes with StatReloader
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) 
            SELECT
                table_name,
                table_type,
                table_comment
            FROM information_schema.tables
            WHERE table_schema = DATABASE()
            ; args=None; alias=default
(0.000) SELECT `django_migrations`.`id`, `django_migrations`.`app`, `django_migrations`.`name`, `django_migrations`.`applied` FROM `django_migrations`; args=(); alias=default
Not Found: /
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`status` = 'New'; args=('New',); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 15 LIMIT 21; args=(15,); alias=default
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/css/bootstrap.css
Not Found: /edit_book/static/plugins/font-awesome-4.7.0/css/font-awesome.css
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/js/bootstrap.min.js
Not Found: /edit_book/static/js/jquery-3.7.0.min.js
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 15 LIMIT 21; args=(15,); alias=default
Not Found: /delete_book/static/js/jquery-3.7.0.min.js
Not Found: /delete_book/static/plugins/bootstrap-3.4.1/css/bootstrap.css
Not Found: /delete_book/static/plugins/font-awesome-4.7.0/css/font-awesome.css
Not Found: /delete_book/static/plugins/bootstrap-3.4.1/js/bootstrap.min.js
Watching for file changes with StatReloader
(0.016) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) 
            SELECT
                table_name,
                table_type,
                table_comment
            FROM information_schema.tables
            WHERE table_schema = DATABASE()
            ; args=None; alias=default
(0.000) SELECT `django_migrations`.`id`, `django_migrations`.`app`, `django_migrations`.`name`, `django_migrations`.`applied` FROM `django_migrations`; args=(); alias=default
Not Found: /
Not Found: /favicon.ico
Not Found: /borrow_detail_info/
Not Found: /borrow_detail_info/
Not Found: /borrow_detail_info/
Not Found: /borrow_detail_info/
Watching for file changes with StatReloader
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) 
            SELECT
                table_name,
                table_type,
                table_comment
            FROM information_schema.tables
            WHERE table_schema = DATABASE()
            ; args=None; alias=default
(0.000) SELECT `django_migrations`.`id`, `django_migrations`.`app`, `django_migrations`.`name`, `django_migrations`.`applied` FROM `django_migrations`; args=(); alias=default
Not Found: /
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `member`.`member_id`, `member`.`firstname`, `member`.`lastname`, `member`.`gender`, `member`.`address`, `member`.`contact`, `member`.`type`, `member`.`year_level`, `member`.`status` FROM `member`; args=(); alias=default
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) 
            SELECT
                table_name,
                table_type,
                table_comment
            FROM information_schema.tables
            WHERE table_schema = DATABASE()
            ; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'auth_group'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['auth_group']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_group'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_group']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group'
            ; args=['auth_group']; alias=default
(0.015) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group']; alias=default
(0.000) SELECT * FROM `auth_group` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_group'
                ; args=['auth_group']; alias=default
(0.016) SHOW INDEX FROM `auth_group`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_group'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_group']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group'
            ; args=['auth_group']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group']; alias=default
(0.000) SELECT * FROM `auth_group` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_group'
                ; args=['auth_group']; alias=default
(0.000) SHOW INDEX FROM `auth_group`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group'
            ; args=['auth_group']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group']; alias=default
(0.000) SELECT * FROM `auth_group` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'auth_group_permissions'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['auth_group_permissions']; alias=default
(0.016) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_group_permissions'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_group_permissions']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group_permissions'
            ; args=['auth_group_permissions']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group_permissions' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group_permissions']; alias=default
(0.000) SELECT * FROM `auth_group_permissions` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_group_permissions'
                ; args=['auth_group_permissions']; alias=default
(0.015) SHOW INDEX FROM `auth_group_permissions`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_group_permissions'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_group_permissions']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group_permissions'
            ; args=['auth_group_permissions']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group_permissions' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group_permissions']; alias=default
(0.000) SELECT * FROM `auth_group_permissions` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_group_permissions'
                ; args=['auth_group_permissions']; alias=default
(0.000) SHOW INDEX FROM `auth_group_permissions`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group_permissions'
            ; args=['auth_group_permissions']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group_permissions' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group_permissions']; alias=default
(0.000) SELECT * FROM `auth_group_permissions` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_group'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_group']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group'
            ; args=['auth_group']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group']; alias=default
(0.000) SELECT * FROM `auth_group` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_group'
                ; args=['auth_group']; alias=default
(0.000) SHOW INDEX FROM `auth_group`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_permission'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_permission']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_permission'
            ; args=['auth_permission']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_permission' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_permission']; alias=default
(0.000) SELECT * FROM `auth_permission` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_permission'
                ; args=['auth_permission']; alias=default
(0.016) SHOW INDEX FROM `auth_permission`; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'auth_permission'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['auth_permission']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_permission'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_permission']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_permission'
            ; args=['auth_permission']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_permission' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_permission']; alias=default
(0.000) SELECT * FROM `auth_permission` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_permission'
                ; args=['auth_permission']; alias=default
(0.000) SHOW INDEX FROM `auth_permission`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_permission'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_permission']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_permission'
            ; args=['auth_permission']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_permission' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_permission']; alias=default
(0.015) SELECT * FROM `auth_permission` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_permission'
                ; args=['auth_permission']; alias=default
(0.000) SHOW INDEX FROM `auth_permission`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_permission'
            ; args=['auth_permission']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_permission' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_permission']; alias=default
(0.000) SELECT * FROM `auth_permission` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_content_type'
            ORDER BY kc.`ordinal_position`
        ; args=['django_content_type']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_content_type'
            ; args=['django_content_type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_content_type' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_content_type']; alias=default
(0.016) SELECT * FROM `django_content_type` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_content_type'
                ; args=['django_content_type']; alias=default
(0.000) SHOW INDEX FROM `django_content_type`; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'auth_user'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user'
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user']; alias=default
(0.015) SELECT * FROM `auth_user` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user'
                ; args=['auth_user']; alias=default
(0.000) SHOW INDEX FROM `auth_user`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user'
            ; args=['auth_user']; alias=default
(0.016) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user']; alias=default
(0.000) SELECT * FROM `auth_user` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user'
                ; args=['auth_user']; alias=default
(0.000) SHOW INDEX FROM `auth_user`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user'
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user']; alias=default
(0.000) SELECT * FROM `auth_user` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'auth_user_groups'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['auth_user_groups']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user_groups'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user_groups']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user_groups'
            ; args=['auth_user_groups']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user_groups' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user_groups']; alias=default
(0.016) SELECT * FROM `auth_user_groups` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user_groups'
                ; args=['auth_user_groups']; alias=default
(0.000) SHOW INDEX FROM `auth_user_groups`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user_groups'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user_groups']; alias=default
(0.015) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user_groups'
            ; args=['auth_user_groups']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user_groups' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user_groups']; alias=default
(0.000) SELECT * FROM `auth_user_groups` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user_groups'
                ; args=['auth_user_groups']; alias=default
(0.000) SHOW INDEX FROM `auth_user_groups`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user_groups'
            ; args=['auth_user_groups']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user_groups' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user_groups']; alias=default
(0.000) SELECT * FROM `auth_user_groups` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user'
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user']; alias=default
(0.000) SELECT * FROM `auth_user` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user'
                ; args=['auth_user']; alias=default
(0.000) SHOW INDEX FROM `auth_user`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_group'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_group']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group'
            ; args=['auth_group']; alias=default
(0.016) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group']; alias=default
(0.000) SELECT * FROM `auth_group` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_group'
                ; args=['auth_group']; alias=default
(0.000) SHOW INDEX FROM `auth_group`; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'auth_user_user_permissions'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['auth_user_user_permissions']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user_user_permissions'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user_user_permissions']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user_user_permissions'
            ; args=['auth_user_user_permissions']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user_user_permissions' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user_user_permissions']; alias=default
(0.000) SELECT * FROM `auth_user_user_permissions` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user_user_permissions'
                ; args=['auth_user_user_permissions']; alias=default
(0.016) SHOW INDEX FROM `auth_user_user_permissions`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user_user_permissions'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user_user_permissions']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user_user_permissions'
            ; args=['auth_user_user_permissions']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user_user_permissions' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user_user_permissions']; alias=default
(0.000) SELECT * FROM `auth_user_user_permissions` LIMIT 1; args=None; alias=default
(0.015) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user_user_permissions'
                ; args=['auth_user_user_permissions']; alias=default
(0.000) SHOW INDEX FROM `auth_user_user_permissions`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user_user_permissions'
            ; args=['auth_user_user_permissions']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user_user_permissions' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user_user_permissions']; alias=default
(0.000) SELECT * FROM `auth_user_user_permissions` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user'
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user']; alias=default
(0.000) SELECT * FROM `auth_user` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user'
                ; args=['auth_user']; alias=default
(0.000) SHOW INDEX FROM `auth_user`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_permission'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_permission']; alias=default
(0.016) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_permission'
            ; args=['auth_permission']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_permission' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_permission']; alias=default
(0.000) SELECT * FROM `auth_permission` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_permission'
                ; args=['auth_permission']; alias=default
(0.000) SHOW INDEX FROM `auth_permission`; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'book'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['book']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'book'
            ORDER BY kc.`ordinal_position`
        ; args=['book']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'book'
            ; args=['book']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'book' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'book']; alias=default
(0.000) SELECT * FROM `book` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'book'
                ; args=['book']; alias=default
(0.000) SHOW INDEX FROM `book`; args=None; alias=default
(0.015) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'book'
            ORDER BY kc.`ordinal_position`
        ; args=['book']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'book'
            ; args=['book']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'book' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'book']; alias=default
(0.000) SELECT * FROM `book` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'book'
                ; args=['book']; alias=default
(0.000) SHOW INDEX FROM `book`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'book'
            ; args=['book']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'book' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'book']; alias=default
(0.000) SELECT * FROM `book` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'borrow'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['borrow']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'borrow'
            ORDER BY kc.`ordinal_position`
        ; args=['borrow']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'borrow'
            ; args=['borrow']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'borrow' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'borrow']; alias=default
(0.000) SELECT * FROM `borrow` LIMIT 1; args=None; alias=default
(0.016) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'borrow'
                ; args=['borrow']; alias=default
(0.000) SHOW INDEX FROM `borrow`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'borrow'
            ORDER BY kc.`ordinal_position`
        ; args=['borrow']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'borrow'
            ; args=['borrow']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'borrow' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'borrow']; alias=default
(0.000) SELECT * FROM `borrow` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'borrow'
                ; args=['borrow']; alias=default
(0.000) SHOW INDEX FROM `borrow`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'borrow'
            ; args=['borrow']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'borrow' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'borrow']; alias=default
(0.016) SELECT * FROM `borrow` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'borrowdetails'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['borrowdetails']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'borrowdetails'
            ORDER BY kc.`ordinal_position`
        ; args=['borrowdetails']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'borrowdetails'
            ; args=['borrowdetails']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'borrowdetails' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'borrowdetails']; alias=default
(0.000) SELECT * FROM `borrowdetails` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'borrowdetails'
                ; args=['borrowdetails']; alias=default
(0.000) SHOW INDEX FROM `borrowdetails`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'borrowdetails'
            ORDER BY kc.`ordinal_position`
        ; args=['borrowdetails']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'borrowdetails'
            ; args=['borrowdetails']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'borrowdetails' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'borrowdetails']; alias=default
(0.000) SELECT * FROM `borrowdetails` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'borrowdetails'
                ; args=['borrowdetails']; alias=default
(0.000) SHOW INDEX FROM `borrowdetails`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'borrowdetails'
            ; args=['borrowdetails']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'borrowdetails' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'borrowdetails']; alias=default
(0.000) SELECT * FROM `borrowdetails` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'category'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['category']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'category'
            ORDER BY kc.`ordinal_position`
        ; args=['category']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'category'
            ; args=['category']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'category' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'category']; alias=default
(0.016) SELECT * FROM `category` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'category'
                ; args=['category']; alias=default
(0.000) SHOW INDEX FROM `category`; args=None; alias=default
(0.016) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'category'
            ORDER BY kc.`ordinal_position`
        ; args=['category']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'category'
            ; args=['category']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'category' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'category']; alias=default
(0.000) SELECT * FROM `category` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'category'
                ; args=['category']; alias=default
(0.000) SHOW INDEX FROM `category`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'category'
            ; args=['category']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'category' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'category']; alias=default
(0.000) SELECT * FROM `category` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'django_admin_log'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['django_admin_log']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_admin_log'
            ORDER BY kc.`ordinal_position`
        ; args=['django_admin_log']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_admin_log'
            ; args=['django_admin_log']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_admin_log' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_admin_log']; alias=default
(0.015) SELECT * FROM `django_admin_log` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_admin_log'
                ; args=['django_admin_log']; alias=default
(0.000) SHOW INDEX FROM `django_admin_log`; args=None; alias=default
(0.016) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_admin_log'
            ORDER BY kc.`ordinal_position`
        ; args=['django_admin_log']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_admin_log'
            ; args=['django_admin_log']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_admin_log' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_admin_log']; alias=default
(0.000) SELECT * FROM `django_admin_log` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_admin_log'
                ; args=['django_admin_log']; alias=default
(0.000) SHOW INDEX FROM `django_admin_log`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_admin_log'
            ; args=['django_admin_log']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_admin_log' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_admin_log']; alias=default
(0.000) SELECT * FROM `django_admin_log` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_content_type'
            ORDER BY kc.`ordinal_position`
        ; args=['django_content_type']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_content_type'
            ; args=['django_content_type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_content_type' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_content_type']; alias=default
(0.000) SELECT * FROM `django_content_type` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_content_type'
                ; args=['django_content_type']; alias=default
(0.000) SHOW INDEX FROM `django_content_type`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user'
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user']; alias=default
(0.000) SELECT * FROM `auth_user` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user'
                ; args=['auth_user']; alias=default
(0.000) SHOW INDEX FROM `auth_user`; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'django_content_type'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['django_content_type']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_content_type'
            ORDER BY kc.`ordinal_position`
        ; args=['django_content_type']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_content_type'
            ; args=['django_content_type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_content_type' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_content_type']; alias=default
(0.000) SELECT * FROM `django_content_type` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_content_type'
                ; args=['django_content_type']; alias=default
(0.000) SHOW INDEX FROM `django_content_type`; args=None; alias=default
(0.016) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_content_type'
            ORDER BY kc.`ordinal_position`
        ; args=['django_content_type']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_content_type'
            ; args=['django_content_type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_content_type' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_content_type']; alias=default
(0.000) SELECT * FROM `django_content_type` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_content_type'
                ; args=['django_content_type']; alias=default
(0.000) SHOW INDEX FROM `django_content_type`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_content_type'
            ; args=['django_content_type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_content_type' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_content_type']; alias=default
(0.000) SELECT * FROM `django_content_type` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'django_migrations'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['django_migrations']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_migrations'
            ORDER BY kc.`ordinal_position`
        ; args=['django_migrations']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_migrations'
            ; args=['django_migrations']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_migrations' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_migrations']; alias=default
(0.000) SELECT * FROM `django_migrations` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_migrations'
                ; args=['django_migrations']; alias=default
(0.016) SHOW INDEX FROM `django_migrations`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_migrations'
            ORDER BY kc.`ordinal_position`
        ; args=['django_migrations']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_migrations'
            ; args=['django_migrations']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_migrations' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_migrations']; alias=default
(0.000) SELECT * FROM `django_migrations` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_migrations'
                ; args=['django_migrations']; alias=default
(0.000) SHOW INDEX FROM `django_migrations`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_migrations'
            ; args=['django_migrations']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_migrations' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_migrations']; alias=default
(0.000) SELECT * FROM `django_migrations` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'django_session'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['django_session']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_session'
            ORDER BY kc.`ordinal_position`
        ; args=['django_session']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_session'
            ; args=['django_session']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_session' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_session']; alias=default
(0.015) SELECT * FROM `django_session` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_session'
                ; args=['django_session']; alias=default
(0.000) SHOW INDEX FROM `django_session`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_session'
            ORDER BY kc.`ordinal_position`
        ; args=['django_session']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_session'
            ; args=['django_session']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_session' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_session']; alias=default
(0.000) SELECT * FROM `django_session` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_session'
                ; args=['django_session']; alias=default
(0.000) SHOW INDEX FROM `django_session`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_session'
            ; args=['django_session']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_session' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_session']; alias=default
(0.016) SELECT * FROM `django_session` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'lost_book'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['lost_book']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'lost_book'
            ORDER BY kc.`ordinal_position`
        ; args=['lost_book']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'lost_book'
            ; args=['lost_book']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'lost_book' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'lost_book']; alias=default
(0.000) SELECT * FROM `lost_book` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'lost_book'
                ; args=['lost_book']; alias=default
(0.000) SHOW INDEX FROM `lost_book`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'lost_book'
            ORDER BY kc.`ordinal_position`
        ; args=['lost_book']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'lost_book'
            ; args=['lost_book']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'lost_book' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'lost_book']; alias=default
(0.000) SELECT * FROM `lost_book` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'lost_book'
                ; args=['lost_book']; alias=default
(0.016) SHOW INDEX FROM `lost_book`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'lost_book'
            ; args=['lost_book']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'lost_book' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'lost_book']; alias=default
(0.000) SELECT * FROM `lost_book` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'member'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['member']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'member'
            ORDER BY kc.`ordinal_position`
        ; args=['member']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'member'
            ; args=['member']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'member' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'member']; alias=default
(0.000) SELECT * FROM `member` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'member'
                ; args=['member']; alias=default
(0.000) SHOW INDEX FROM `member`; args=None; alias=default
(0.015) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'member'
            ORDER BY kc.`ordinal_position`
        ; args=['member']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'member'
            ; args=['member']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'member' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'member']; alias=default
(0.000) SELECT * FROM `member` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'member'
                ; args=['member']; alias=default
(0.000) SHOW INDEX FROM `member`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'member'
            ; args=['member']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'member' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'member']; alias=default
(0.000) SELECT * FROM `member` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'type'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['type']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'type'
            ORDER BY kc.`ordinal_position`
        ; args=['type']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'type'
            ; args=['type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'type' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'type']; alias=default
(0.016) SELECT * FROM `type` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'type'
                ; args=['type']; alias=default
(0.015) SHOW INDEX FROM `type`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'type'
            ORDER BY kc.`ordinal_position`
        ; args=['type']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'type'
            ; args=['type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'type' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'type']; alias=default
(0.000) SELECT * FROM `type` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'type'
                ; args=['type']; alias=default
(0.000) SHOW INDEX FROM `type`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'type'
            ; args=['type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'type' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'type']; alias=default
(0.000) SELECT * FROM `type` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'users'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['users']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'users'
            ORDER BY kc.`ordinal_position`
        ; args=['users']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'users'
            ; args=['users']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'users' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'users']; alias=default
(0.000) SELECT * FROM `users` LIMIT 1; args=None; alias=default
(0.016) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'users'
                ; args=['users']; alias=default
(0.000) SHOW INDEX FROM `users`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'users'
            ORDER BY kc.`ordinal_position`
        ; args=['users']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'users'
            ; args=['users']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'users' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'users']; alias=default
(0.000) SELECT * FROM `users` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'users'
                ; args=['users']; alias=default
(0.000) SHOW INDEX FROM `users`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'users'
            ; args=['users']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'users' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'users']; alias=default
(0.000) SELECT * FROM `users` LIMIT 1; args=None; alias=default
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) 
            SELECT
                table_name,
                table_type,
                table_comment
            FROM information_schema.tables
            WHERE table_schema = DATABASE()
            ; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'auth_group'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['auth_group']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_group'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_group']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group'
            ; args=['auth_group']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group']; alias=default
(0.000) SELECT * FROM `auth_group` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_group'
                ; args=['auth_group']; alias=default
(0.000) SHOW INDEX FROM `auth_group`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_group'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_group']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group'
            ; args=['auth_group']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group']; alias=default
(0.000) SELECT * FROM `auth_group` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_group'
                ; args=['auth_group']; alias=default
(0.000) SHOW INDEX FROM `auth_group`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group'
            ; args=['auth_group']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group']; alias=default
(0.000) SELECT * FROM `auth_group` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'auth_group_permissions'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['auth_group_permissions']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_group_permissions'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_group_permissions']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group_permissions'
            ; args=['auth_group_permissions']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group_permissions' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group_permissions']; alias=default
(0.000) SELECT * FROM `auth_group_permissions` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_group_permissions'
                ; args=['auth_group_permissions']; alias=default
(0.000) SHOW INDEX FROM `auth_group_permissions`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_group_permissions'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_group_permissions']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group_permissions'
            ; args=['auth_group_permissions']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group_permissions' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group_permissions']; alias=default
(0.000) SELECT * FROM `auth_group_permissions` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_group_permissions'
                ; args=['auth_group_permissions']; alias=default
(0.000) SHOW INDEX FROM `auth_group_permissions`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group_permissions'
            ; args=['auth_group_permissions']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group_permissions' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group_permissions']; alias=default
(0.000) SELECT * FROM `auth_group_permissions` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_group'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_group']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group'
            ; args=['auth_group']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group']; alias=default
(0.000) SELECT * FROM `auth_group` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_group'
                ; args=['auth_group']; alias=default
(0.000) SHOW INDEX FROM `auth_group`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_permission'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_permission']; alias=default
(0.016) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_permission'
            ; args=['auth_permission']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_permission' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_permission']; alias=default
(0.000) SELECT * FROM `auth_permission` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_permission'
                ; args=['auth_permission']; alias=default
(0.000) SHOW INDEX FROM `auth_permission`; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'auth_permission'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['auth_permission']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_permission'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_permission']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_permission'
            ; args=['auth_permission']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_permission' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_permission']; alias=default
(0.000) SELECT * FROM `auth_permission` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_permission'
                ; args=['auth_permission']; alias=default
(0.000) SHOW INDEX FROM `auth_permission`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_permission'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_permission']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_permission'
            ; args=['auth_permission']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_permission' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_permission']; alias=default
(0.000) SELECT * FROM `auth_permission` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_permission'
                ; args=['auth_permission']; alias=default
(0.015) SHOW INDEX FROM `auth_permission`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_permission'
            ; args=['auth_permission']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_permission' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_permission']; alias=default
(0.000) SELECT * FROM `auth_permission` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_content_type'
            ORDER BY kc.`ordinal_position`
        ; args=['django_content_type']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_content_type'
            ; args=['django_content_type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_content_type' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_content_type']; alias=default
(0.000) SELECT * FROM `django_content_type` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_content_type'
                ; args=['django_content_type']; alias=default
(0.000) SHOW INDEX FROM `django_content_type`; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'auth_user'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user'
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user']; alias=default
(0.000) SELECT * FROM `auth_user` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user'
                ; args=['auth_user']; alias=default
(0.000) SHOW INDEX FROM `auth_user`; args=None; alias=default
(0.016) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user'
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user']; alias=default
(0.000) SELECT * FROM `auth_user` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user'
                ; args=['auth_user']; alias=default
(0.000) SHOW INDEX FROM `auth_user`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user'
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user']; alias=default
(0.000) SELECT * FROM `auth_user` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'auth_user_groups'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['auth_user_groups']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user_groups'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user_groups']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user_groups'
            ; args=['auth_user_groups']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user_groups' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user_groups']; alias=default
(0.000) SELECT * FROM `auth_user_groups` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user_groups'
                ; args=['auth_user_groups']; alias=default
(0.000) SHOW INDEX FROM `auth_user_groups`; args=None; alias=default
(0.015) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user_groups'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user_groups']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user_groups'
            ; args=['auth_user_groups']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user_groups' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user_groups']; alias=default
(0.000) SELECT * FROM `auth_user_groups` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user_groups'
                ; args=['auth_user_groups']; alias=default
(0.000) SHOW INDEX FROM `auth_user_groups`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user_groups'
            ; args=['auth_user_groups']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user_groups' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user_groups']; alias=default
(0.000) SELECT * FROM `auth_user_groups` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user'
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user']; alias=default
(0.000) SELECT * FROM `auth_user` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user'
                ; args=['auth_user']; alias=default
(0.000) SHOW INDEX FROM `auth_user`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_group'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_group']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group'
            ; args=['auth_group']; alias=default
(0.016) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group']; alias=default
(0.000) SELECT * FROM `auth_group` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_group'
                ; args=['auth_group']; alias=default
(0.000) SHOW INDEX FROM `auth_group`; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'auth_user_user_permissions'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['auth_user_user_permissions']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user_user_permissions'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user_user_permissions']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user_user_permissions'
            ; args=['auth_user_user_permissions']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user_user_permissions' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user_user_permissions']; alias=default
(0.000) SELECT * FROM `auth_user_user_permissions` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user_user_permissions'
                ; args=['auth_user_user_permissions']; alias=default
(0.000) SHOW INDEX FROM `auth_user_user_permissions`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user_user_permissions'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user_user_permissions']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user_user_permissions'
            ; args=['auth_user_user_permissions']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user_user_permissions' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user_user_permissions']; alias=default
(0.000) SELECT * FROM `auth_user_user_permissions` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user_user_permissions'
                ; args=['auth_user_user_permissions']; alias=default
(0.000) SHOW INDEX FROM `auth_user_user_permissions`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user_user_permissions'
            ; args=['auth_user_user_permissions']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user_user_permissions' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user_user_permissions']; alias=default
(0.000) SELECT * FROM `auth_user_user_permissions` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user'
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user']; alias=default
(0.000) SELECT * FROM `auth_user` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user'
                ; args=['auth_user']; alias=default
(0.000) SHOW INDEX FROM `auth_user`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_permission'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_permission']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_permission'
            ; args=['auth_permission']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_permission' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_permission']; alias=default
(0.000) SELECT * FROM `auth_permission` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_permission'
                ; args=['auth_permission']; alias=default
(0.000) SHOW INDEX FROM `auth_permission`; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'book'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['book']; alias=default
(0.015) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'book'
            ORDER BY kc.`ordinal_position`
        ; args=['book']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'book'
            ; args=['book']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'book' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'book']; alias=default
(0.000) SELECT * FROM `book` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'book'
                ; args=['book']; alias=default
(0.000) SHOW INDEX FROM `book`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'book'
            ORDER BY kc.`ordinal_position`
        ; args=['book']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'book'
            ; args=['book']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'book' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'book']; alias=default
(0.000) SELECT * FROM `book` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'book'
                ; args=['book']; alias=default
(0.000) SHOW INDEX FROM `book`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'book'
            ; args=['book']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'book' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'book']; alias=default
(0.000) SELECT * FROM `book` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'borrow'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['borrow']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'borrow'
            ORDER BY kc.`ordinal_position`
        ; args=['borrow']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'borrow'
            ; args=['borrow']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'borrow' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'borrow']; alias=default
(0.000) SELECT * FROM `borrow` LIMIT 1; args=None; alias=default
(0.016) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'borrow'
                ; args=['borrow']; alias=default
(0.000) SHOW INDEX FROM `borrow`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'borrow'
            ORDER BY kc.`ordinal_position`
        ; args=['borrow']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'borrow'
            ; args=['borrow']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'borrow' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'borrow']; alias=default
(0.000) SELECT * FROM `borrow` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'borrow'
                ; args=['borrow']; alias=default
(0.000) SHOW INDEX FROM `borrow`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'borrow'
            ; args=['borrow']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'borrow' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'borrow']; alias=default
(0.000) SELECT * FROM `borrow` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'borrowdetails'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['borrowdetails']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'borrowdetails'
            ORDER BY kc.`ordinal_position`
        ; args=['borrowdetails']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'borrowdetails'
            ; args=['borrowdetails']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'borrowdetails' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'borrowdetails']; alias=default
(0.000) SELECT * FROM `borrowdetails` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'borrowdetails'
                ; args=['borrowdetails']; alias=default
(0.000) SHOW INDEX FROM `borrowdetails`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'borrowdetails'
            ORDER BY kc.`ordinal_position`
        ; args=['borrowdetails']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'borrowdetails'
            ; args=['borrowdetails']; alias=default
(0.016) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'borrowdetails' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'borrowdetails']; alias=default
(0.000) SELECT * FROM `borrowdetails` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'borrowdetails'
                ; args=['borrowdetails']; alias=default
(0.000) SHOW INDEX FROM `borrowdetails`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'borrowdetails'
            ; args=['borrowdetails']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'borrowdetails' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'borrowdetails']; alias=default
(0.000) SELECT * FROM `borrowdetails` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'category'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['category']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'category'
            ORDER BY kc.`ordinal_position`
        ; args=['category']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'category'
            ; args=['category']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'category' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'category']; alias=default
(0.000) SELECT * FROM `category` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'category'
                ; args=['category']; alias=default
(0.000) SHOW INDEX FROM `category`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'category'
            ORDER BY kc.`ordinal_position`
        ; args=['category']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'category'
            ; args=['category']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'category' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'category']; alias=default
(0.000) SELECT * FROM `category` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'category'
                ; args=['category']; alias=default
(0.015) SHOW INDEX FROM `category`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'category'
            ; args=['category']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'category' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'category']; alias=default
(0.000) SELECT * FROM `category` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'django_admin_log'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['django_admin_log']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_admin_log'
            ORDER BY kc.`ordinal_position`
        ; args=['django_admin_log']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_admin_log'
            ; args=['django_admin_log']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_admin_log' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_admin_log']; alias=default
(0.000) SELECT * FROM `django_admin_log` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_admin_log'
                ; args=['django_admin_log']; alias=default
(0.000) SHOW INDEX FROM `django_admin_log`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_admin_log'
            ORDER BY kc.`ordinal_position`
        ; args=['django_admin_log']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_admin_log'
            ; args=['django_admin_log']; alias=default
(0.016) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_admin_log' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_admin_log']; alias=default
(0.000) SELECT * FROM `django_admin_log` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_admin_log'
                ; args=['django_admin_log']; alias=default
(0.000) SHOW INDEX FROM `django_admin_log`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_admin_log'
            ; args=['django_admin_log']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_admin_log' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_admin_log']; alias=default
(0.000) SELECT * FROM `django_admin_log` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_content_type'
            ORDER BY kc.`ordinal_position`
        ; args=['django_content_type']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_content_type'
            ; args=['django_content_type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_content_type' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_content_type']; alias=default
(0.000) SELECT * FROM `django_content_type` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_content_type'
                ; args=['django_content_type']; alias=default
(0.000) SHOW INDEX FROM `django_content_type`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user'
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user']; alias=default
(0.000) SELECT * FROM `auth_user` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user'
                ; args=['auth_user']; alias=default
(0.000) SHOW INDEX FROM `auth_user`; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'django_content_type'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['django_content_type']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_content_type'
            ORDER BY kc.`ordinal_position`
        ; args=['django_content_type']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_content_type'
            ; args=['django_content_type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_content_type' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_content_type']; alias=default
(0.000) SELECT * FROM `django_content_type` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_content_type'
                ; args=['django_content_type']; alias=default
(0.000) SHOW INDEX FROM `django_content_type`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_content_type'
            ORDER BY kc.`ordinal_position`
        ; args=['django_content_type']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_content_type'
            ; args=['django_content_type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_content_type' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_content_type']; alias=default
(0.000) SELECT * FROM `django_content_type` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_content_type'
                ; args=['django_content_type']; alias=default
(0.000) SHOW INDEX FROM `django_content_type`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_content_type'
            ; args=['django_content_type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_content_type' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_content_type']; alias=default
(0.000) SELECT * FROM `django_content_type` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'django_migrations'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['django_migrations']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_migrations'
            ORDER BY kc.`ordinal_position`
        ; args=['django_migrations']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_migrations'
            ; args=['django_migrations']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_migrations' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_migrations']; alias=default
(0.000) SELECT * FROM `django_migrations` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_migrations'
                ; args=['django_migrations']; alias=default
(0.000) SHOW INDEX FROM `django_migrations`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_migrations'
            ORDER BY kc.`ordinal_position`
        ; args=['django_migrations']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_migrations'
            ; args=['django_migrations']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_migrations' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_migrations']; alias=default
(0.000) SELECT * FROM `django_migrations` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_migrations'
                ; args=['django_migrations']; alias=default
(0.000) SHOW INDEX FROM `django_migrations`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_migrations'
            ; args=['django_migrations']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_migrations' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_migrations']; alias=default
(0.000) SELECT * FROM `django_migrations` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'django_session'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['django_session']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_session'
            ORDER BY kc.`ordinal_position`
        ; args=['django_session']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_session'
            ; args=['django_session']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_session' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_session']; alias=default
(0.000) SELECT * FROM `django_session` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_session'
                ; args=['django_session']; alias=default
(0.000) SHOW INDEX FROM `django_session`; args=None; alias=default
(0.016) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_session'
            ORDER BY kc.`ordinal_position`
        ; args=['django_session']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_session'
            ; args=['django_session']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_session' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_session']; alias=default
(0.000) SELECT * FROM `django_session` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_session'
                ; args=['django_session']; alias=default
(0.000) SHOW INDEX FROM `django_session`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_session'
            ; args=['django_session']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_session' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_session']; alias=default
(0.000) SELECT * FROM `django_session` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'lost_book'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['lost_book']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'lost_book'
            ORDER BY kc.`ordinal_position`
        ; args=['lost_book']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'lost_book'
            ; args=['lost_book']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'lost_book' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'lost_book']; alias=default
(0.000) SELECT * FROM `lost_book` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'lost_book'
                ; args=['lost_book']; alias=default
(0.000) SHOW INDEX FROM `lost_book`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'lost_book'
            ORDER BY kc.`ordinal_position`
        ; args=['lost_book']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'lost_book'
            ; args=['lost_book']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'lost_book' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'lost_book']; alias=default
(0.015) SELECT * FROM `lost_book` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'lost_book'
                ; args=['lost_book']; alias=default
(0.000) SHOW INDEX FROM `lost_book`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'lost_book'
            ; args=['lost_book']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'lost_book' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'lost_book']; alias=default
(0.000) SELECT * FROM `lost_book` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'member'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['member']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'member'
            ORDER BY kc.`ordinal_position`
        ; args=['member']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'member'
            ; args=['member']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'member' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'member']; alias=default
(0.000) SELECT * FROM `member` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'member'
                ; args=['member']; alias=default
(0.000) SHOW INDEX FROM `member`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'member'
            ORDER BY kc.`ordinal_position`
        ; args=['member']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'member'
            ; args=['member']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'member' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'member']; alias=default
(0.000) SELECT * FROM `member` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'member'
                ; args=['member']; alias=default
(0.000) SHOW INDEX FROM `member`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'member'
            ; args=['member']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'member' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'member']; alias=default
(0.016) SELECT * FROM `member` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'type'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['type']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'type'
            ORDER BY kc.`ordinal_position`
        ; args=['type']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'type'
            ; args=['type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'type' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'type']; alias=default
(0.000) SELECT * FROM `type` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'type'
                ; args=['type']; alias=default
(0.000) SHOW INDEX FROM `type`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'type'
            ORDER BY kc.`ordinal_position`
        ; args=['type']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'type'
            ; args=['type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'type' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'type']; alias=default
(0.000) SELECT * FROM `type` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'type'
                ; args=['type']; alias=default
(0.000) SHOW INDEX FROM `type`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'type'
            ; args=['type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'type' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'type']; alias=default
(0.000) SELECT * FROM `type` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'users'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['users']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'users'
            ORDER BY kc.`ordinal_position`
        ; args=['users']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'users'
            ; args=['users']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'users' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'users']; alias=default
(0.000) SELECT * FROM `users` LIMIT 1; args=None; alias=default
(0.016) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'users'
                ; args=['users']; alias=default
(0.000) SHOW INDEX FROM `users`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'users'
            ORDER BY kc.`ordinal_position`
        ; args=['users']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'users'
            ; args=['users']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'users' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'users']; alias=default
(0.000) SELECT * FROM `users` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'users'
                ; args=['users']; alias=default
(0.000) SHOW INDEX FROM `users`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'users'
            ; args=['users']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'users' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'users']; alias=default
(0.000) SELECT * FROM `users` LIMIT 1; args=None; alias=default
Watching for file changes with StatReloader
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) 
            SELECT
                table_name,
                table_type,
                table_comment
            FROM information_schema.tables
            WHERE table_schema = DATABASE()
            ; args=None; alias=default
(0.000) SELECT `django_migrations`.`id`, `django_migrations`.`app`, `django_migrations`.`name`, `django_migrations`.`applied` FROM `django_migrations`; args=(); alias=default
Not Found: /
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `borrow_view`.`borrow_id`, `borrow_view`.`member_id`, `borrow_view`.`date_borrow`, `borrow_view`.`due_date`, `borrow_view`.`borrow_details_id`, `borrow_view`.`book_id`, `borrow_view`.`borrow_status`, `borrow_view`.`date_return` FROM `borrow_view`; args=(); alias=default
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.016) SELECT `borrow_view`.`borrow_id`, `borrow_view`.`member_id`, `borrow_view`.`date_borrow`, `borrow_view`.`due_date`, `borrow_view`.`borrow_details_id`, `borrow_view`.`book_id`, `borrow_view`.`borrow_status`, `borrow_view`.`date_return` FROM `borrow_view`; args=(); alias=default
D:\PycharmProjects\Django_Test\app_test\books.py changed, reloading.
Watching for file changes with StatReloader
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) 
            SELECT
                table_name,
                table_type,
                table_comment
            FROM information_schema.tables
            WHERE table_schema = DATABASE()
            ; args=None; alias=default
(0.000) SELECT `django_migrations`.`id`, `django_migrations`.`app`, `django_migrations`.`name`, `django_migrations`.`applied` FROM `django_migrations`; args=(); alias=default
D:\PycharmProjects\Django_Test\app_test\books.py changed, reloading.
Watching for file changes with StatReloader
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) 
            SELECT
                table_name,
                table_type,
                table_comment
            FROM information_schema.tables
            WHERE table_schema = DATABASE()
            ; args=None; alias=default
(0.000) SELECT `django_migrations`.`id`, `django_migrations`.`app`, `django_migrations`.`name`, `django_migrations`.`applied` FROM `django_migrations`; args=(); alias=default
D:\PycharmProjects\Django_Test\app_test\books.py changed, reloading.
Watching for file changes with StatReloader
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) 
            SELECT
                table_name,
                table_type,
                table_comment
            FROM information_schema.tables
            WHERE table_schema = DATABASE()
            ; args=None; alias=default
(0.000) SELECT `django_migrations`.`id`, `django_migrations`.`app`, `django_migrations`.`name`, `django_migrations`.`applied` FROM `django_migrations`; args=(); alias=default
D:\PycharmProjects\Django_Test\app_test\books.py changed, reloading.
Watching for file changes with StatReloader
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) 
            SELECT
                table_name,
                table_type,
                table_comment
            FROM information_schema.tables
            WHERE table_schema = DATABASE()
            ; args=None; alias=default
(0.000) SELECT `django_migrations`.`id`, `django_migrations`.`app`, `django_migrations`.`name`, `django_migrations`.`applied` FROM `django_migrations`; args=(); alias=default
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `borrow_view`.`borrow_id`, `borrow_view`.`member_id`, `borrow_view`.`date_borrow`, `borrow_view`.`due_date`, `borrow_view`.`borrow_details_id`, `borrow_view`.`book_id`, `borrow_view`.`borrow_status`, `borrow_view`.`date_return` FROM `borrow_view` WHERE `borrow_view`.`borrow_status` = 'pending'; args=('pending',); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `borrow_view`.`borrow_id`, `borrow_view`.`member_id`, `borrow_view`.`date_borrow`, `borrow_view`.`due_date`, `borrow_view`.`borrow_details_id`, `borrow_view`.`book_id`, `borrow_view`.`borrow_status`, `borrow_view`.`date_return` FROM `borrow_view` WHERE `borrow_view`.`borrow_status` = 'returned'; args=('returned',); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.016) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.016) None; args=['hello-change', 22, 'hello', 22, 'world', 'world', '123-132', 2021, '', '2013-12-11 06:47:11', 'New']; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` LIMIT 21; args=(); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` LIMIT 21; args=(); alias=default
Internal Server Error: /add_book/
Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1644, 'ISBN already exists')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\Anaconda\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\PycharmProjects\Django_Test\app_test\books.py", line 84, in add_book
    admin_object = Book.objects.create(**form.cleaned_data)
  File "D:\Anaconda\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda\lib\site-packages\django\db\models\query.py", line 658, in create
    obj.save(force_insert=True, using=self.db)
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 814, in save
    self.save_base(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 877, in save_base
    updated = self._save_table(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 1020, in _save_table
    results = self._do_insert(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 1061, in _do_insert
    return manager._insert(
  File "D:\Anaconda\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda\lib\site-packages\django\db\models\query.py", line 1805, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "D:\Anaconda\lib\site-packages\django\db\models\sql\compiler.py", line 1820, in execute_sql
    cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 102, in execute
    return super().execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 67, in execute
    return self._execute_with_wrappers(
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 80, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1644, 'ISBN already exists')
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) None; args=['hello-change', 22, 'hello', 22, 'world', 'world', '111', 2021, '', '2013-12-11 06:47:11', 'New']; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` LIMIT 21; args=(); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` LIMIT 21; args=(); alias=default
Internal Server Error: /add_book/
Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1442, "Can't update table 'book' in stored function/trigger because it is already used by statement which invoked this stored function/trigger.")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\Anaconda\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\PycharmProjects\Django_Test\app_test\books.py", line 84, in add_book
    admin_object = Book.objects.create(**form.cleaned_data)
  File "D:\Anaconda\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda\lib\site-packages\django\db\models\query.py", line 658, in create
    obj.save(force_insert=True, using=self.db)
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 814, in save
    self.save_base(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 877, in save_base
    updated = self._save_table(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 1020, in _save_table
    results = self._do_insert(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 1061, in _do_insert
    return manager._insert(
  File "D:\Anaconda\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda\lib\site-packages\django\db\models\query.py", line 1805, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "D:\Anaconda\lib\site-packages\django\db\models\sql\compiler.py", line 1820, in execute_sql
    cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 102, in execute
    return super().execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 67, in execute
    return self._execute_with_wrappers(
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 80, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1442, "Can't update table 'book' in stored function/trigger because it is already used by statement which invoked this stored function/trigger.")
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) None; args=['hello-change', 22, 'hello', 22, 'world', 'world', '111', 22, '', '2013-12-11 06:47:11', 'New']; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` LIMIT 21; args=(); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` LIMIT 21; args=(); alias=default
Internal Server Error: /add_book/
Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1442, "Can't update table 'book' in stored function/trigger because it is already used by statement which invoked this stored function/trigger.")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\Anaconda\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\PycharmProjects\Django_Test\app_test\books.py", line 84, in add_book
    admin_object = Book.objects.create(**form.cleaned_data)
  File "D:\Anaconda\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda\lib\site-packages\django\db\models\query.py", line 658, in create
    obj.save(force_insert=True, using=self.db)
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 814, in save
    self.save_base(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 877, in save_base
    updated = self._save_table(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 1020, in _save_table
    results = self._do_insert(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 1061, in _do_insert
    return manager._insert(
  File "D:\Anaconda\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda\lib\site-packages\django\db\models\query.py", line 1805, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "D:\Anaconda\lib\site-packages\django\db\models\sql\compiler.py", line 1820, in execute_sql
    cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 102, in execute
    return super().execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 67, in execute
    return self._execute_with_wrappers(
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 80, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1442, "Can't update table 'book' in stored function/trigger because it is already used by statement which invoked this stored function/trigger.")
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) None; args=['hello-change', 22, 'hello', 22, 'world', 'world', '111', 22, '', '2013-12-11 06:47:11', 'New']; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` LIMIT 21; args=(); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` LIMIT 21; args=(); alias=default
Internal Server Error: /add_book/
Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1054, "Unknown column 'category_id' in 'IN/ALL/ANY subquery'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\Anaconda\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\PycharmProjects\Django_Test\app_test\books.py", line 84, in add_book
    admin_object = Book.objects.create(**form.cleaned_data)
  File "D:\Anaconda\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda\lib\site-packages\django\db\models\query.py", line 658, in create
    obj.save(force_insert=True, using=self.db)
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 814, in save
    self.save_base(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 877, in save_base
    updated = self._save_table(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 1020, in _save_table
    results = self._do_insert(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 1061, in _do_insert
    return manager._insert(
  File "D:\Anaconda\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda\lib\site-packages\django\db\models\query.py", line 1805, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "D:\Anaconda\lib\site-packages\django\db\models\sql\compiler.py", line 1820, in execute_sql
    cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 102, in execute
    return super().execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 67, in execute
    return self._execute_with_wrappers(
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 80, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1054, "Unknown column 'category_id' in 'IN/ALL/ANY subquery'")
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) None; args=['hello-change', 3, 'hello', 22, 'world', 'world', '111', 22, '', '2013-12-11 06:47:11', 'New']; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` LIMIT 21; args=(); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` LIMIT 21; args=(); alias=default
Internal Server Error: /add_book/
Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1054, "Unknown column 'category_id' in 'IN/ALL/ANY subquery'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\Anaconda\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\PycharmProjects\Django_Test\app_test\books.py", line 84, in add_book
    admin_object = Book.objects.create(**form.cleaned_data)
  File "D:\Anaconda\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda\lib\site-packages\django\db\models\query.py", line 658, in create
    obj.save(force_insert=True, using=self.db)
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 814, in save
    self.save_base(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 877, in save_base
    updated = self._save_table(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 1020, in _save_table
    results = self._do_insert(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 1061, in _do_insert
    return manager._insert(
  File "D:\Anaconda\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda\lib\site-packages\django\db\models\query.py", line 1805, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "D:\Anaconda\lib\site-packages\django\db\models\sql\compiler.py", line 1820, in execute_sql
    cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 102, in execute
    return super().execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 67, in execute
    return self._execute_with_wrappers(
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 80, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1054, "Unknown column 'category_id' in 'IN/ALL/ANY subquery'")
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) None; args=['hello-change', 3, 'hello', 22, 'world', 'world', '111', 22, '', '2013-12-11 06:47:11', 'New']; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` LIMIT 21; args=(); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` LIMIT 21; args=(); alias=default
Internal Server Error: /add_book/
Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1442, "Can't update table 'book' in stored function/trigger because it is already used by statement which invoked this stored function/trigger.")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\Anaconda\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\PycharmProjects\Django_Test\app_test\books.py", line 84, in add_book
    admin_object = Book.objects.create(**form.cleaned_data)
  File "D:\Anaconda\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda\lib\site-packages\django\db\models\query.py", line 658, in create
    obj.save(force_insert=True, using=self.db)
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 814, in save
    self.save_base(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 877, in save_base
    updated = self._save_table(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 1020, in _save_table
    results = self._do_insert(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 1061, in _do_insert
    return manager._insert(
  File "D:\Anaconda\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda\lib\site-packages\django\db\models\query.py", line 1805, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "D:\Anaconda\lib\site-packages\django\db\models\sql\compiler.py", line 1820, in execute_sql
    cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 102, in execute
    return super().execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 67, in execute
    return self._execute_with_wrappers(
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 80, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1442, "Can't update table 'book' in stored function/trigger because it is already used by statement which invoked this stored function/trigger.")
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.015) None; args=['hello-change', 3, 'hello', 22, 'world', 'world', '111', 22, '', '2013-12-11 06:47:11', 'New']; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` LIMIT 21; args=(); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` LIMIT 21; args=(); alias=default
Internal Server Error: /add_book/
Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1442, "Can't update table 'book' in stored function/trigger because it is already used by statement which invoked this stored function/trigger.")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\Anaconda\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\PycharmProjects\Django_Test\app_test\books.py", line 84, in add_book
    admin_object = Book.objects.create(**form.cleaned_data)
  File "D:\Anaconda\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda\lib\site-packages\django\db\models\query.py", line 658, in create
    obj.save(force_insert=True, using=self.db)
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 814, in save
    self.save_base(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 877, in save_base
    updated = self._save_table(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 1020, in _save_table
    results = self._do_insert(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 1061, in _do_insert
    return manager._insert(
  File "D:\Anaconda\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda\lib\site-packages\django\db\models\query.py", line 1805, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "D:\Anaconda\lib\site-packages\django\db\models\sql\compiler.py", line 1820, in execute_sql
    cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 102, in execute
    return super().execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 67, in execute
    return self._execute_with_wrappers(
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 80, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1442, "Can't update table 'book' in stored function/trigger because it is already used by statement which invoked this stored function/trigger.")
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) None; args=['hello-change', 22, 'hello', 22, 'world', 'world', '111', 22, '', '2013-12-11 06:47:11', 'New']; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` LIMIT 21; args=(); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` LIMIT 21; args=(); alias=default
Internal Server Error: /add_book/
Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1644, 'category_id not exists')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\Anaconda\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\PycharmProjects\Django_Test\app_test\books.py", line 84, in add_book
    admin_object = Book.objects.create(**form.cleaned_data)
  File "D:\Anaconda\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda\lib\site-packages\django\db\models\query.py", line 658, in create
    obj.save(force_insert=True, using=self.db)
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 814, in save
    self.save_base(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 877, in save_base
    updated = self._save_table(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 1020, in _save_table
    results = self._do_insert(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 1061, in _do_insert
    return manager._insert(
  File "D:\Anaconda\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda\lib\site-packages\django\db\models\query.py", line 1805, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "D:\Anaconda\lib\site-packages\django\db\models\sql\compiler.py", line 1820, in execute_sql
    cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 102, in execute
    return super().execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 67, in execute
    return self._execute_with_wrappers(
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 80, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1644, 'category_id not exists')
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) None; args=['hello-change', 3, 'hello', 22, 'world', 'world', '111', 22, '', '2013-12-11 06:47:11', 'New']; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` LIMIT 21; args=(); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` LIMIT 21; args=(); alias=default
Internal Server Error: /add_book/
Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1442, "Can't update table 'book' in stored function/trigger because it is already used by statement which invoked this stored function/trigger.")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\Anaconda\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\PycharmProjects\Django_Test\app_test\books.py", line 84, in add_book
    admin_object = Book.objects.create(**form.cleaned_data)
  File "D:\Anaconda\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda\lib\site-packages\django\db\models\query.py", line 658, in create
    obj.save(force_insert=True, using=self.db)
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 814, in save
    self.save_base(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 877, in save_base
    updated = self._save_table(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 1020, in _save_table
    results = self._do_insert(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 1061, in _do_insert
    return manager._insert(
  File "D:\Anaconda\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda\lib\site-packages\django\db\models\query.py", line 1805, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "D:\Anaconda\lib\site-packages\django\db\models\sql\compiler.py", line 1820, in execute_sql
    cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 102, in execute
    return super().execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 67, in execute
    return self._execute_with_wrappers(
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 80, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1442, "Can't update table 'book' in stored function/trigger because it is already used by statement which invoked this stored function/trigger.")
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) None; args=['hello-change', 3, 'hello', 22, 'world', 'world', '111', 22, '', '2013-12-11 06:47:11', 'New']; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` LIMIT 21; args=(); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` LIMIT 21; args=(); alias=default
Internal Server Error: /add_book/
Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1442, "Can't update table 'book' in stored function/trigger because it is already used by statement which invoked this stored function/trigger.")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\Anaconda\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\PycharmProjects\Django_Test\app_test\books.py", line 84, in add_book
    admin_object = Book.objects.create(**form.cleaned_data)
  File "D:\Anaconda\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda\lib\site-packages\django\db\models\query.py", line 658, in create
    obj.save(force_insert=True, using=self.db)
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 814, in save
    self.save_base(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 877, in save_base
    updated = self._save_table(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 1020, in _save_table
    results = self._do_insert(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 1061, in _do_insert
    return manager._insert(
  File "D:\Anaconda\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda\lib\site-packages\django\db\models\query.py", line 1805, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "D:\Anaconda\lib\site-packages\django\db\models\sql\compiler.py", line 1820, in execute_sql
    cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 102, in execute
    return super().execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 67, in execute
    return self._execute_with_wrappers(
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 80, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1442, "Can't update table 'book' in stored function/trigger because it is already used by statement which invoked this stored function/trigger.")
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) None; args=['hello-change', 3, 'hello', 22, 'world', 'world', '111', 22, '', '2013-12-11 06:47:11', 'New']; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` LIMIT 21; args=(); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` LIMIT 21; args=(); alias=default
Internal Server Error: /add_book/
Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1644, 'category_id not exists')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\Anaconda\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\PycharmProjects\Django_Test\app_test\books.py", line 84, in add_book
    admin_object = Book.objects.create(**form.cleaned_data)
  File "D:\Anaconda\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda\lib\site-packages\django\db\models\query.py", line 658, in create
    obj.save(force_insert=True, using=self.db)
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 814, in save
    self.save_base(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 877, in save_base
    updated = self._save_table(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 1020, in _save_table
    results = self._do_insert(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 1061, in _do_insert
    return manager._insert(
  File "D:\Anaconda\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda\lib\site-packages\django\db\models\query.py", line 1805, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "D:\Anaconda\lib\site-packages\django\db\models\sql\compiler.py", line 1820, in execute_sql
    cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 102, in execute
    return super().execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 67, in execute
    return self._execute_with_wrappers(
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 80, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1644, 'category_id not exists')
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) None; args=['hello-change', 3, 'hello', 22, 'world', 'world', '111', 22, '', '2013-12-11 06:47:11', 'New']; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` LIMIT 21; args=(); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` LIMIT 21; args=(); alias=default
Internal Server Error: /add_book/
Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1442, "Can't update table 'book' in stored function/trigger because it is already used by statement which invoked this stored function/trigger.")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\Anaconda\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\PycharmProjects\Django_Test\app_test\books.py", line 84, in add_book
    admin_object = Book.objects.create(**form.cleaned_data)
  File "D:\Anaconda\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda\lib\site-packages\django\db\models\query.py", line 658, in create
    obj.save(force_insert=True, using=self.db)
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 814, in save
    self.save_base(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 877, in save_base
    updated = self._save_table(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 1020, in _save_table
    results = self._do_insert(
  File "D:\Anaconda\lib\site-packages\django\db\models\base.py", line 1061, in _do_insert
    return manager._insert(
  File "D:\Anaconda\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda\lib\site-packages\django\db\models\query.py", line 1805, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "D:\Anaconda\lib\site-packages\django\db\models\sql\compiler.py", line 1820, in execute_sql
    cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 102, in execute
    return super().execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 67, in execute
    return self._execute_with_wrappers(
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 80, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "D:\Anaconda\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1442, "Can't update table 'book' in stored function/trigger because it is already used by statement which invoked this stored function/trigger.")
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.015) INSERT INTO `book` (`book_title`, `category_id`, `author`, `book_copies`, `book_pub`, `publisher_name`, `isbn`, `copyright_year`, `date_receive`, `date_added`, `status`) VALUES ('hello-change', 3, 'hello', 22, 'world', 'world', '111', 22, '', '2013-12-11 06:47:11', 'New'); args=['hello-change', 3, 'hello', 22, 'world', 'world', '111', 22, '', '2013-12-11 06:47:11', 'New']; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `borrow_view`.`borrow_id`, `borrow_view`.`member_id`, `borrow_view`.`date_borrow`, `borrow_view`.`due_date`, `borrow_view`.`borrow_details_id`, `borrow_view`.`book_id`, `borrow_view`.`borrow_status`, `borrow_view`.`date_return` FROM `borrow_view`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 15 LIMIT 21; args=(15,); alias=default
Not Found: /edit_book/static/js/jquery-3.7.0.min.js
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/css/bootstrap.css
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/js/bootstrap.min.js
Not Found: /edit_book/static/plugins/font-awesome-4.7.0/css/font-awesome.css
D:\PycharmProjects\Django_Test\app_test\books.py changed, reloading.
Watching for file changes with StatReloader
Watching for file changes with StatReloader
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) 
            SELECT
                table_name,
                table_type,
                table_comment
            FROM information_schema.tables
            WHERE table_schema = DATABASE()
            ; args=None; alias=default
(0.000) SELECT `django_migrations`.`id`, `django_migrations`.`app`, `django_migrations`.`name`, `django_migrations`.`applied` FROM `django_migrations`; args=(); alias=default
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 15 LIMIT 21; args=(15,); alias=default
Not Found: /edit_book/static/plugins/font-awesome-4.7.0/css/font-awesome.css
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/css/bootstrap.css
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/js/bootstrap.min.js
Not Found: /edit_book/static/js/jquery-3.7.0.min.js
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 15 LIMIT 21; args=(15,); alias=default
Not Found: /edit_book/static/js/jquery-3.7.0.min.js
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/js/bootstrap.min.js
Not Found: /edit_book/static/plugins/font-awesome-4.7.0/css/font-awesome.css
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/css/bootstrap.css
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 15 LIMIT 21; args=(15,); alias=default
Not Found: /edit_book/static/js/jquery-3.7.0.min.js
Not Found: /edit_book/static/plugins/font-awesome-4.7.0/css/font-awesome.css
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/css/bootstrap.css
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/js/bootstrap.min.js
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`status` = 'Lost'; args=('Lost',); alias=default
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.016) 
            SELECT
                table_name,
                table_type,
                table_comment
            FROM information_schema.tables
            WHERE table_schema = DATABASE()
            ; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'auth_group'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['auth_group']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_group'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_group']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group'
            ; args=['auth_group']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group']; alias=default
(0.000) SELECT * FROM `auth_group` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_group'
                ; args=['auth_group']; alias=default
(0.000) SHOW INDEX FROM `auth_group`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_group'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_group']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group'
            ; args=['auth_group']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group']; alias=default
(0.000) SELECT * FROM `auth_group` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_group'
                ; args=['auth_group']; alias=default
(0.000) SHOW INDEX FROM `auth_group`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group'
            ; args=['auth_group']; alias=default
(0.015) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group']; alias=default
(0.000) SELECT * FROM `auth_group` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'auth_group_permissions'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['auth_group_permissions']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_group_permissions'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_group_permissions']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group_permissions'
            ; args=['auth_group_permissions']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group_permissions' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group_permissions']; alias=default
(0.000) SELECT * FROM `auth_group_permissions` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_group_permissions'
                ; args=['auth_group_permissions']; alias=default
(0.000) SHOW INDEX FROM `auth_group_permissions`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_group_permissions'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_group_permissions']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group_permissions'
            ; args=['auth_group_permissions']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group_permissions' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group_permissions']; alias=default
(0.000) SELECT * FROM `auth_group_permissions` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_group_permissions'
                ; args=['auth_group_permissions']; alias=default
(0.000) SHOW INDEX FROM `auth_group_permissions`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group_permissions'
            ; args=['auth_group_permissions']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group_permissions' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group_permissions']; alias=default
(0.000) SELECT * FROM `auth_group_permissions` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_group'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_group']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group'
            ; args=['auth_group']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group']; alias=default
(0.000) SELECT * FROM `auth_group` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_group'
                ; args=['auth_group']; alias=default
(0.000) SHOW INDEX FROM `auth_group`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_permission'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_permission']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_permission'
            ; args=['auth_permission']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_permission' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_permission']; alias=default
(0.000) SELECT * FROM `auth_permission` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_permission'
                ; args=['auth_permission']; alias=default
(0.000) SHOW INDEX FROM `auth_permission`; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'auth_permission'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['auth_permission']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_permission'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_permission']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_permission'
            ; args=['auth_permission']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_permission' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_permission']; alias=default
(0.000) SELECT * FROM `auth_permission` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_permission'
                ; args=['auth_permission']; alias=default
(0.000) SHOW INDEX FROM `auth_permission`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_permission'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_permission']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_permission'
            ; args=['auth_permission']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_permission' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_permission']; alias=default
(0.000) SELECT * FROM `auth_permission` LIMIT 1; args=None; alias=default
(0.016) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_permission'
                ; args=['auth_permission']; alias=default
(0.000) SHOW INDEX FROM `auth_permission`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_permission'
            ; args=['auth_permission']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_permission' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_permission']; alias=default
(0.000) SELECT * FROM `auth_permission` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_content_type'
            ORDER BY kc.`ordinal_position`
        ; args=['django_content_type']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_content_type'
            ; args=['django_content_type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_content_type' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_content_type']; alias=default
(0.000) SELECT * FROM `django_content_type` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_content_type'
                ; args=['django_content_type']; alias=default
(0.000) SHOW INDEX FROM `django_content_type`; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'auth_user'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['auth_user']; alias=default
(0.016) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user'
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user']; alias=default
(0.000) SELECT * FROM `auth_user` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user'
                ; args=['auth_user']; alias=default
(0.000) SHOW INDEX FROM `auth_user`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user'
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user']; alias=default
(0.000) SELECT * FROM `auth_user` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user'
                ; args=['auth_user']; alias=default
(0.000) SHOW INDEX FROM `auth_user`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user'
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user']; alias=default
(0.000) SELECT * FROM `auth_user` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'auth_user_groups'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['auth_user_groups']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user_groups'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user_groups']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user_groups'
            ; args=['auth_user_groups']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user_groups' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user_groups']; alias=default
(0.000) SELECT * FROM `auth_user_groups` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user_groups'
                ; args=['auth_user_groups']; alias=default
(0.000) SHOW INDEX FROM `auth_user_groups`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user_groups'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user_groups']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user_groups'
            ; args=['auth_user_groups']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user_groups' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user_groups']; alias=default
(0.000) SELECT * FROM `auth_user_groups` LIMIT 1; args=None; alias=default
(0.016) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user_groups'
                ; args=['auth_user_groups']; alias=default
(0.000) SHOW INDEX FROM `auth_user_groups`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user_groups'
            ; args=['auth_user_groups']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user_groups' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user_groups']; alias=default
(0.000) SELECT * FROM `auth_user_groups` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user'
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user']; alias=default
(0.000) SELECT * FROM `auth_user` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user'
                ; args=['auth_user']; alias=default
(0.000) SHOW INDEX FROM `auth_user`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_group'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_group']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group'
            ; args=['auth_group']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group']; alias=default
(0.000) SELECT * FROM `auth_group` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_group'
                ; args=['auth_group']; alias=default
(0.000) SHOW INDEX FROM `auth_group`; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'auth_user_user_permissions'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['auth_user_user_permissions']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user_user_permissions'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user_user_permissions']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user_user_permissions'
            ; args=['auth_user_user_permissions']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user_user_permissions' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user_user_permissions']; alias=default
(0.000) SELECT * FROM `auth_user_user_permissions` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user_user_permissions'
                ; args=['auth_user_user_permissions']; alias=default
(0.000) SHOW INDEX FROM `auth_user_user_permissions`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user_user_permissions'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user_user_permissions']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user_user_permissions'
            ; args=['auth_user_user_permissions']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user_user_permissions' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user_user_permissions']; alias=default
(0.000) SELECT * FROM `auth_user_user_permissions` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user_user_permissions'
                ; args=['auth_user_user_permissions']; alias=default
(0.000) SHOW INDEX FROM `auth_user_user_permissions`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user_user_permissions'
            ; args=['auth_user_user_permissions']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user_user_permissions' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user_user_permissions']; alias=default
(0.000) SELECT * FROM `auth_user_user_permissions` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user'
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user']; alias=default
(0.000) SELECT * FROM `auth_user` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user'
                ; args=['auth_user']; alias=default
(0.000) SHOW INDEX FROM `auth_user`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_permission'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_permission']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_permission'
            ; args=['auth_permission']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_permission' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_permission']; alias=default
(0.000) SELECT * FROM `auth_permission` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_permission'
                ; args=['auth_permission']; alias=default
(0.000) SHOW INDEX FROM `auth_permission`; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'book'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['book']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'book'
            ORDER BY kc.`ordinal_position`
        ; args=['book']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'book'
            ; args=['book']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'book' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'book']; alias=default
(0.000) SELECT * FROM `book` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'book'
                ; args=['book']; alias=default
(0.000) SHOW INDEX FROM `book`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'book'
            ORDER BY kc.`ordinal_position`
        ; args=['book']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'book'
            ; args=['book']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'book' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'book']; alias=default
(0.000) SELECT * FROM `book` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'book'
                ; args=['book']; alias=default
(0.000) SHOW INDEX FROM `book`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'book'
            ; args=['book']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'book' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'book']; alias=default
(0.000) SELECT * FROM `book` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'borrow'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['borrow']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'borrow'
            ORDER BY kc.`ordinal_position`
        ; args=['borrow']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'borrow'
            ; args=['borrow']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'borrow' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'borrow']; alias=default
(0.000) SELECT * FROM `borrow` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'borrow'
                ; args=['borrow']; alias=default
(0.000) SHOW INDEX FROM `borrow`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'borrow'
            ORDER BY kc.`ordinal_position`
        ; args=['borrow']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'borrow'
            ; args=['borrow']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'borrow' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'borrow']; alias=default
(0.000) SELECT * FROM `borrow` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'borrow'
                ; args=['borrow']; alias=default
(0.000) SHOW INDEX FROM `borrow`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'borrow'
            ; args=['borrow']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'borrow' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'borrow']; alias=default
(0.000) SELECT * FROM `borrow` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'borrowdetails'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['borrowdetails']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'borrowdetails'
            ORDER BY kc.`ordinal_position`
        ; args=['borrowdetails']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'borrowdetails'
            ; args=['borrowdetails']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'borrowdetails' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'borrowdetails']; alias=default
(0.000) SELECT * FROM `borrowdetails` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'borrowdetails'
                ; args=['borrowdetails']; alias=default
(0.000) SHOW INDEX FROM `borrowdetails`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'borrowdetails'
            ORDER BY kc.`ordinal_position`
        ; args=['borrowdetails']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'borrowdetails'
            ; args=['borrowdetails']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'borrowdetails' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'borrowdetails']; alias=default
(0.000) SELECT * FROM `borrowdetails` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'borrowdetails'
                ; args=['borrowdetails']; alias=default
(0.000) SHOW INDEX FROM `borrowdetails`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'borrowdetails'
            ; args=['borrowdetails']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'borrowdetails' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'borrowdetails']; alias=default
(0.000) SELECT * FROM `borrowdetails` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'category'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['category']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'category'
            ORDER BY kc.`ordinal_position`
        ; args=['category']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'category'
            ; args=['category']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'category' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'category']; alias=default
(0.000) SELECT * FROM `category` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'category'
                ; args=['category']; alias=default
(0.000) SHOW INDEX FROM `category`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'category'
            ORDER BY kc.`ordinal_position`
        ; args=['category']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'category'
            ; args=['category']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'category' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'category']; alias=default
(0.000) SELECT * FROM `category` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'category'
                ; args=['category']; alias=default
(0.000) SHOW INDEX FROM `category`; args=None; alias=default
(0.015) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'category'
            ; args=['category']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'category' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'category']; alias=default
(0.000) SELECT * FROM `category` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'django_admin_log'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['django_admin_log']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_admin_log'
            ORDER BY kc.`ordinal_position`
        ; args=['django_admin_log']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_admin_log'
            ; args=['django_admin_log']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_admin_log' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_admin_log']; alias=default
(0.000) SELECT * FROM `django_admin_log` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_admin_log'
                ; args=['django_admin_log']; alias=default
(0.016) SHOW INDEX FROM `django_admin_log`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_admin_log'
            ORDER BY kc.`ordinal_position`
        ; args=['django_admin_log']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_admin_log'
            ; args=['django_admin_log']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_admin_log' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_admin_log']; alias=default
(0.000) SELECT * FROM `django_admin_log` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_admin_log'
                ; args=['django_admin_log']; alias=default
(0.000) SHOW INDEX FROM `django_admin_log`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_admin_log'
            ; args=['django_admin_log']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_admin_log' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_admin_log']; alias=default
(0.000) SELECT * FROM `django_admin_log` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_content_type'
            ORDER BY kc.`ordinal_position`
        ; args=['django_content_type']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_content_type'
            ; args=['django_content_type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_content_type' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_content_type']; alias=default
(0.000) SELECT * FROM `django_content_type` LIMIT 1; args=None; alias=default
(0.016) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_content_type'
                ; args=['django_content_type']; alias=default
(0.000) SHOW INDEX FROM `django_content_type`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user'
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user']; alias=default
(0.000) SELECT * FROM `auth_user` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user'
                ; args=['auth_user']; alias=default
(0.000) SHOW INDEX FROM `auth_user`; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'django_content_type'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['django_content_type']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_content_type'
            ORDER BY kc.`ordinal_position`
        ; args=['django_content_type']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_content_type'
            ; args=['django_content_type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_content_type' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_content_type']; alias=default
(0.000) SELECT * FROM `django_content_type` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_content_type'
                ; args=['django_content_type']; alias=default
(0.000) SHOW INDEX FROM `django_content_type`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_content_type'
            ORDER BY kc.`ordinal_position`
        ; args=['django_content_type']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_content_type'
            ; args=['django_content_type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_content_type' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_content_type']; alias=default
(0.000) SELECT * FROM `django_content_type` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_content_type'
                ; args=['django_content_type']; alias=default
(0.000) SHOW INDEX FROM `django_content_type`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_content_type'
            ; args=['django_content_type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_content_type' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_content_type']; alias=default
(0.000) SELECT * FROM `django_content_type` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'django_migrations'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['django_migrations']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_migrations'
            ORDER BY kc.`ordinal_position`
        ; args=['django_migrations']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_migrations'
            ; args=['django_migrations']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_migrations' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_migrations']; alias=default
(0.000) SELECT * FROM `django_migrations` LIMIT 1; args=None; alias=default
(0.016) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_migrations'
                ; args=['django_migrations']; alias=default
(0.000) SHOW INDEX FROM `django_migrations`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_migrations'
            ORDER BY kc.`ordinal_position`
        ; args=['django_migrations']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_migrations'
            ; args=['django_migrations']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_migrations' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_migrations']; alias=default
(0.000) SELECT * FROM `django_migrations` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_migrations'
                ; args=['django_migrations']; alias=default
(0.000) SHOW INDEX FROM `django_migrations`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_migrations'
            ; args=['django_migrations']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_migrations' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_migrations']; alias=default
(0.000) SELECT * FROM `django_migrations` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'django_session'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['django_session']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_session'
            ORDER BY kc.`ordinal_position`
        ; args=['django_session']; alias=default
(0.015) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_session'
            ; args=['django_session']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_session' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_session']; alias=default
(0.000) SELECT * FROM `django_session` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_session'
                ; args=['django_session']; alias=default
(0.000) SHOW INDEX FROM `django_session`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_session'
            ORDER BY kc.`ordinal_position`
        ; args=['django_session']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_session'
            ; args=['django_session']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_session' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_session']; alias=default
(0.000) SELECT * FROM `django_session` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_session'
                ; args=['django_session']; alias=default
(0.000) SHOW INDEX FROM `django_session`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_session'
            ; args=['django_session']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_session' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_session']; alias=default
(0.000) SELECT * FROM `django_session` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'lost_book'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['lost_book']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'lost_book'
            ORDER BY kc.`ordinal_position`
        ; args=['lost_book']; alias=default
(0.016) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'lost_book'
            ; args=['lost_book']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'lost_book' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'lost_book']; alias=default
(0.000) SELECT * FROM `lost_book` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'lost_book'
                ; args=['lost_book']; alias=default
(0.000) SHOW INDEX FROM `lost_book`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'lost_book'
            ORDER BY kc.`ordinal_position`
        ; args=['lost_book']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'lost_book'
            ; args=['lost_book']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'lost_book' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'lost_book']; alias=default
(0.000) SELECT * FROM `lost_book` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'lost_book'
                ; args=['lost_book']; alias=default
(0.000) SHOW INDEX FROM `lost_book`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'lost_book'
            ; args=['lost_book']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'lost_book' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'lost_book']; alias=default
(0.000) SELECT * FROM `lost_book` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'member'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['member']; alias=default
(0.016) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'member'
            ORDER BY kc.`ordinal_position`
        ; args=['member']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'member'
            ; args=['member']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'member' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'member']; alias=default
(0.000) SELECT * FROM `member` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'member'
                ; args=['member']; alias=default
(0.000) SHOW INDEX FROM `member`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'member'
            ORDER BY kc.`ordinal_position`
        ; args=['member']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'member'
            ; args=['member']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'member' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'member']; alias=default
(0.000) SELECT * FROM `member` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'member'
                ; args=['member']; alias=default
(0.000) SHOW INDEX FROM `member`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'member'
            ; args=['member']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'member' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'member']; alias=default
(0.000) SELECT * FROM `member` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'type'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['type']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'type'
            ORDER BY kc.`ordinal_position`
        ; args=['type']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'type'
            ; args=['type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'type' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'type']; alias=default
(0.000) SELECT * FROM `type` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'type'
                ; args=['type']; alias=default
(0.000) SHOW INDEX FROM `type`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'type'
            ORDER BY kc.`ordinal_position`
        ; args=['type']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'type'
            ; args=['type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'type' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'type']; alias=default
(0.000) SELECT * FROM `type` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'type'
                ; args=['type']; alias=default
(0.000) SHOW INDEX FROM `type`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'type'
            ; args=['type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'type' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'type']; alias=default
(0.000) SELECT * FROM `type` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'users'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['users']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'users'
            ORDER BY kc.`ordinal_position`
        ; args=['users']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'users'
            ; args=['users']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'users' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'users']; alias=default
(0.000) SELECT * FROM `users` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'users'
                ; args=['users']; alias=default
(0.000) SHOW INDEX FROM `users`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'users'
            ORDER BY kc.`ordinal_position`
        ; args=['users']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'users'
            ; args=['users']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'users' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'users']; alias=default
(0.000) SELECT * FROM `users` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'users'
                ; args=['users']; alias=default
(0.000) SHOW INDEX FROM `users`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'users'
            ; args=['users']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'users' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'users']; alias=default
(0.000) SELECT * FROM `users` LIMIT 1; args=None; alias=default
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) 
            SELECT
                table_name,
                table_type,
                table_comment
            FROM information_schema.tables
            WHERE table_schema = DATABASE()
            ; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'auth_group'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['auth_group']; alias=default
(0.015) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_group'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_group']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group'
            ; args=['auth_group']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group']; alias=default
(0.000) SELECT * FROM `auth_group` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_group'
                ; args=['auth_group']; alias=default
(0.000) SHOW INDEX FROM `auth_group`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_group'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_group']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group'
            ; args=['auth_group']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group']; alias=default
(0.000) SELECT * FROM `auth_group` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_group'
                ; args=['auth_group']; alias=default
(0.000) SHOW INDEX FROM `auth_group`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group'
            ; args=['auth_group']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group']; alias=default
(0.000) SELECT * FROM `auth_group` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'auth_group_permissions'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['auth_group_permissions']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_group_permissions'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_group_permissions']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group_permissions'
            ; args=['auth_group_permissions']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group_permissions' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group_permissions']; alias=default
(0.016) SELECT * FROM `auth_group_permissions` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_group_permissions'
                ; args=['auth_group_permissions']; alias=default
(0.000) SHOW INDEX FROM `auth_group_permissions`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_group_permissions'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_group_permissions']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group_permissions'
            ; args=['auth_group_permissions']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group_permissions' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group_permissions']; alias=default
(0.000) SELECT * FROM `auth_group_permissions` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_group_permissions'
                ; args=['auth_group_permissions']; alias=default
(0.000) SHOW INDEX FROM `auth_group_permissions`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group_permissions'
            ; args=['auth_group_permissions']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group_permissions' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group_permissions']; alias=default
(0.000) SELECT * FROM `auth_group_permissions` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_group'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_group']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group'
            ; args=['auth_group']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group']; alias=default
(0.000) SELECT * FROM `auth_group` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_group'
                ; args=['auth_group']; alias=default
(0.000) SHOW INDEX FROM `auth_group`; args=None; alias=default
(0.016) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_permission'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_permission']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_permission'
            ; args=['auth_permission']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_permission' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_permission']; alias=default
(0.000) SELECT * FROM `auth_permission` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_permission'
                ; args=['auth_permission']; alias=default
(0.000) SHOW INDEX FROM `auth_permission`; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'auth_permission'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['auth_permission']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_permission'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_permission']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_permission'
            ; args=['auth_permission']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_permission' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_permission']; alias=default
(0.000) SELECT * FROM `auth_permission` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_permission'
                ; args=['auth_permission']; alias=default
(0.000) SHOW INDEX FROM `auth_permission`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_permission'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_permission']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_permission'
            ; args=['auth_permission']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_permission' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_permission']; alias=default
(0.000) SELECT * FROM `auth_permission` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_permission'
                ; args=['auth_permission']; alias=default
(0.000) SHOW INDEX FROM `auth_permission`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_permission'
            ; args=['auth_permission']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_permission' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_permission']; alias=default
(0.000) SELECT * FROM `auth_permission` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_content_type'
            ORDER BY kc.`ordinal_position`
        ; args=['django_content_type']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_content_type'
            ; args=['django_content_type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_content_type' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_content_type']; alias=default
(0.000) SELECT * FROM `django_content_type` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_content_type'
                ; args=['django_content_type']; alias=default
(0.000) SHOW INDEX FROM `django_content_type`; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'auth_user'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user'
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user']; alias=default
(0.000) SELECT * FROM `auth_user` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user'
                ; args=['auth_user']; alias=default
(0.000) SHOW INDEX FROM `auth_user`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user']; alias=default
(0.016) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user'
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user']; alias=default
(0.000) SELECT * FROM `auth_user` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user'
                ; args=['auth_user']; alias=default
(0.000) SHOW INDEX FROM `auth_user`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user'
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user']; alias=default
(0.000) SELECT * FROM `auth_user` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'auth_user_groups'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['auth_user_groups']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user_groups'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user_groups']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user_groups'
            ; args=['auth_user_groups']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user_groups' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user_groups']; alias=default
(0.000) SELECT * FROM `auth_user_groups` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user_groups'
                ; args=['auth_user_groups']; alias=default
(0.000) SHOW INDEX FROM `auth_user_groups`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user_groups'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user_groups']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user_groups'
            ; args=['auth_user_groups']; alias=default
(0.015) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user_groups' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user_groups']; alias=default
(0.000) SELECT * FROM `auth_user_groups` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user_groups'
                ; args=['auth_user_groups']; alias=default
(0.000) SHOW INDEX FROM `auth_user_groups`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user_groups'
            ; args=['auth_user_groups']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user_groups' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user_groups']; alias=default
(0.000) SELECT * FROM `auth_user_groups` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user'
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user']; alias=default
(0.000) SELECT * FROM `auth_user` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user'
                ; args=['auth_user']; alias=default
(0.000) SHOW INDEX FROM `auth_user`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_group'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_group']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group'
            ; args=['auth_group']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group']; alias=default
(0.000) SELECT * FROM `auth_group` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_group'
                ; args=['auth_group']; alias=default
(0.000) SHOW INDEX FROM `auth_group`; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'auth_user_user_permissions'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['auth_user_user_permissions']; alias=default
(0.016) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user_user_permissions'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user_user_permissions']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user_user_permissions'
            ; args=['auth_user_user_permissions']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user_user_permissions' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user_user_permissions']; alias=default
(0.000) SELECT * FROM `auth_user_user_permissions` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user_user_permissions'
                ; args=['auth_user_user_permissions']; alias=default
(0.000) SHOW INDEX FROM `auth_user_user_permissions`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user_user_permissions'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user_user_permissions']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user_user_permissions'
            ; args=['auth_user_user_permissions']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user_user_permissions' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user_user_permissions']; alias=default
(0.000) SELECT * FROM `auth_user_user_permissions` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user_user_permissions'
                ; args=['auth_user_user_permissions']; alias=default
(0.000) SHOW INDEX FROM `auth_user_user_permissions`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user_user_permissions'
            ; args=['auth_user_user_permissions']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user_user_permissions' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user_user_permissions']; alias=default
(0.000) SELECT * FROM `auth_user_user_permissions` LIMIT 1; args=None; alias=default
(0.016) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user'
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user']; alias=default
(0.000) SELECT * FROM `auth_user` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user'
                ; args=['auth_user']; alias=default
(0.000) SHOW INDEX FROM `auth_user`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_permission'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_permission']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_permission'
            ; args=['auth_permission']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_permission' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_permission']; alias=default
(0.000) SELECT * FROM `auth_permission` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_permission'
                ; args=['auth_permission']; alias=default
(0.000) SHOW INDEX FROM `auth_permission`; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'book'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['book']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'book'
            ORDER BY kc.`ordinal_position`
        ; args=['book']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'book'
            ; args=['book']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'book' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'book']; alias=default
(0.000) SELECT * FROM `book` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'book'
                ; args=['book']; alias=default
(0.015) SHOW INDEX FROM `book`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'book'
            ORDER BY kc.`ordinal_position`
        ; args=['book']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'book'
            ; args=['book']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'book' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'book']; alias=default
(0.000) SELECT * FROM `book` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'book'
                ; args=['book']; alias=default
(0.000) SHOW INDEX FROM `book`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'book'
            ; args=['book']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'book' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'book']; alias=default
(0.000) SELECT * FROM `book` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'borrow'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['borrow']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'borrow'
            ORDER BY kc.`ordinal_position`
        ; args=['borrow']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'borrow'
            ; args=['borrow']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'borrow' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'borrow']; alias=default
(0.000) SELECT * FROM `borrow` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'borrow'
                ; args=['borrow']; alias=default
(0.000) SHOW INDEX FROM `borrow`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'borrow'
            ORDER BY kc.`ordinal_position`
        ; args=['borrow']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'borrow'
            ; args=['borrow']; alias=default
(0.016) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'borrow' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'borrow']; alias=default
(0.000) SELECT * FROM `borrow` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'borrow'
                ; args=['borrow']; alias=default
(0.000) SHOW INDEX FROM `borrow`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'borrow'
            ; args=['borrow']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'borrow' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'borrow']; alias=default
(0.000) SELECT * FROM `borrow` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'borrowdetails'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['borrowdetails']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'borrowdetails'
            ORDER BY kc.`ordinal_position`
        ; args=['borrowdetails']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'borrowdetails'
            ; args=['borrowdetails']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'borrowdetails' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'borrowdetails']; alias=default
(0.000) SELECT * FROM `borrowdetails` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'borrowdetails'
                ; args=['borrowdetails']; alias=default
(0.000) SHOW INDEX FROM `borrowdetails`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'borrowdetails'
            ORDER BY kc.`ordinal_position`
        ; args=['borrowdetails']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'borrowdetails'
            ; args=['borrowdetails']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'borrowdetails' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'borrowdetails']; alias=default
(0.000) SELECT * FROM `borrowdetails` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'borrowdetails'
                ; args=['borrowdetails']; alias=default
(0.000) SHOW INDEX FROM `borrowdetails`; args=None; alias=default
(0.016) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'borrowdetails'
            ; args=['borrowdetails']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'borrowdetails' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'borrowdetails']; alias=default
(0.000) SELECT * FROM `borrowdetails` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'category'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['category']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'category'
            ORDER BY kc.`ordinal_position`
        ; args=['category']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'category'
            ; args=['category']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'category' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'category']; alias=default
(0.000) SELECT * FROM `category` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'category'
                ; args=['category']; alias=default
(0.000) SHOW INDEX FROM `category`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'category'
            ORDER BY kc.`ordinal_position`
        ; args=['category']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'category'
            ; args=['category']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'category' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'category']; alias=default
(0.000) SELECT * FROM `category` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'category'
                ; args=['category']; alias=default
(0.000) SHOW INDEX FROM `category`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'category'
            ; args=['category']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'category' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'category']; alias=default
(0.000) SELECT * FROM `category` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'django_admin_log'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['django_admin_log']; alias=default
(0.015) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_admin_log'
            ORDER BY kc.`ordinal_position`
        ; args=['django_admin_log']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_admin_log'
            ; args=['django_admin_log']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_admin_log' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_admin_log']; alias=default
(0.000) SELECT * FROM `django_admin_log` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_admin_log'
                ; args=['django_admin_log']; alias=default
(0.000) SHOW INDEX FROM `django_admin_log`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_admin_log'
            ORDER BY kc.`ordinal_position`
        ; args=['django_admin_log']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_admin_log'
            ; args=['django_admin_log']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_admin_log' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_admin_log']; alias=default
(0.000) SELECT * FROM `django_admin_log` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_admin_log'
                ; args=['django_admin_log']; alias=default
(0.016) SHOW INDEX FROM `django_admin_log`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_admin_log'
            ; args=['django_admin_log']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_admin_log' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_admin_log']; alias=default
(0.000) SELECT * FROM `django_admin_log` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_content_type'
            ORDER BY kc.`ordinal_position`
        ; args=['django_content_type']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_content_type'
            ; args=['django_content_type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_content_type' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_content_type']; alias=default
(0.000) SELECT * FROM `django_content_type` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_content_type'
                ; args=['django_content_type']; alias=default
(0.000) SHOW INDEX FROM `django_content_type`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user'
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user']; alias=default
(0.000) SELECT * FROM `auth_user` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user'
                ; args=['auth_user']; alias=default
(0.000) SHOW INDEX FROM `auth_user`; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'django_content_type'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['django_content_type']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_content_type'
            ORDER BY kc.`ordinal_position`
        ; args=['django_content_type']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_content_type'
            ; args=['django_content_type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_content_type' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_content_type']; alias=default
(0.000) SELECT * FROM `django_content_type` LIMIT 1; args=None; alias=default
(0.015) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_content_type'
                ; args=['django_content_type']; alias=default
(0.000) SHOW INDEX FROM `django_content_type`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_content_type'
            ORDER BY kc.`ordinal_position`
        ; args=['django_content_type']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_content_type'
            ; args=['django_content_type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_content_type' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_content_type']; alias=default
(0.000) SELECT * FROM `django_content_type` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_content_type'
                ; args=['django_content_type']; alias=default
(0.000) SHOW INDEX FROM `django_content_type`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_content_type'
            ; args=['django_content_type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_content_type' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_content_type']; alias=default
(0.000) SELECT * FROM `django_content_type` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'django_migrations'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['django_migrations']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_migrations'
            ORDER BY kc.`ordinal_position`
        ; args=['django_migrations']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_migrations'
            ; args=['django_migrations']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_migrations' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_migrations']; alias=default
(0.000) SELECT * FROM `django_migrations` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_migrations'
                ; args=['django_migrations']; alias=default
(0.000) SHOW INDEX FROM `django_migrations`; args=None; alias=default
(0.016) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_migrations'
            ORDER BY kc.`ordinal_position`
        ; args=['django_migrations']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_migrations'
            ; args=['django_migrations']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_migrations' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_migrations']; alias=default
(0.000) SELECT * FROM `django_migrations` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_migrations'
                ; args=['django_migrations']; alias=default
(0.000) SHOW INDEX FROM `django_migrations`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_migrations'
            ; args=['django_migrations']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_migrations' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_migrations']; alias=default
(0.000) SELECT * FROM `django_migrations` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'django_session'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['django_session']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_session'
            ORDER BY kc.`ordinal_position`
        ; args=['django_session']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_session'
            ; args=['django_session']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_session' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_session']; alias=default
(0.000) SELECT * FROM `django_session` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_session'
                ; args=['django_session']; alias=default
(0.000) SHOW INDEX FROM `django_session`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_session'
            ORDER BY kc.`ordinal_position`
        ; args=['django_session']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_session'
            ; args=['django_session']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_session' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_session']; alias=default
(0.000) SELECT * FROM `django_session` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_session'
                ; args=['django_session']; alias=default
(0.016) SHOW INDEX FROM `django_session`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_session'
            ; args=['django_session']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_session' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_session']; alias=default
(0.000) SELECT * FROM `django_session` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'lost_book'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['lost_book']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'lost_book'
            ORDER BY kc.`ordinal_position`
        ; args=['lost_book']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'lost_book'
            ; args=['lost_book']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'lost_book' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'lost_book']; alias=default
(0.000) SELECT * FROM `lost_book` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'lost_book'
                ; args=['lost_book']; alias=default
(0.000) SHOW INDEX FROM `lost_book`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'lost_book'
            ORDER BY kc.`ordinal_position`
        ; args=['lost_book']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'lost_book'
            ; args=['lost_book']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'lost_book' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'lost_book']; alias=default
(0.000) SELECT * FROM `lost_book` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'lost_book'
                ; args=['lost_book']; alias=default
(0.000) SHOW INDEX FROM `lost_book`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'lost_book'
            ; args=['lost_book']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'lost_book' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'lost_book']; alias=default
(0.000) SELECT * FROM `lost_book` LIMIT 1; args=None; alias=default
(0.015) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'member'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['member']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'member'
            ORDER BY kc.`ordinal_position`
        ; args=['member']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'member'
            ; args=['member']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'member' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'member']; alias=default
(0.000) SELECT * FROM `member` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'member'
                ; args=['member']; alias=default
(0.000) SHOW INDEX FROM `member`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'member'
            ORDER BY kc.`ordinal_position`
        ; args=['member']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'member'
            ; args=['member']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'member' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'member']; alias=default
(0.000) SELECT * FROM `member` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'member'
                ; args=['member']; alias=default
(0.000) SHOW INDEX FROM `member`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'member'
            ; args=['member']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'member' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'member']; alias=default
(0.000) SELECT * FROM `member` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'type'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['type']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'type'
            ORDER BY kc.`ordinal_position`
        ; args=['type']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'type'
            ; args=['type']; alias=default
(0.016) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'type' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'type']; alias=default
(0.000) SELECT * FROM `type` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'type'
                ; args=['type']; alias=default
(0.000) SHOW INDEX FROM `type`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'type'
            ORDER BY kc.`ordinal_position`
        ; args=['type']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'type'
            ; args=['type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'type' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'type']; alias=default
(0.000) SELECT * FROM `type` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'type'
                ; args=['type']; alias=default
(0.000) SHOW INDEX FROM `type`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'type'
            ; args=['type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'type' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'type']; alias=default
(0.000) SELECT * FROM `type` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'users'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['users']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'users'
            ORDER BY kc.`ordinal_position`
        ; args=['users']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'users'
            ; args=['users']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'users' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'users']; alias=default
(0.000) SELECT * FROM `users` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'users'
                ; args=['users']; alias=default
(0.000) SHOW INDEX FROM `users`; args=None; alias=default
(0.016) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'users'
            ORDER BY kc.`ordinal_position`
        ; args=['users']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'users'
            ; args=['users']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'users' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'users']; alias=default
(0.000) SELECT * FROM `users` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'users'
                ; args=['users']; alias=default
(0.000) SHOW INDEX FROM `users`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'users'
            ; args=['users']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'users' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'users']; alias=default
(0.000) SELECT * FROM `users` LIMIT 1; args=None; alias=default
(0.016) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) 
            SELECT
                table_name,
                table_type,
                table_comment
            FROM information_schema.tables
            WHERE table_schema = DATABASE()
            ; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'auth_group'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['auth_group']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_group'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_group']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group'
            ; args=['auth_group']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group']; alias=default
(0.000) SELECT * FROM `auth_group` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_group'
                ; args=['auth_group']; alias=default
(0.000) SHOW INDEX FROM `auth_group`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_group'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_group']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group'
            ; args=['auth_group']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group']; alias=default
(0.000) SELECT * FROM `auth_group` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_group'
                ; args=['auth_group']; alias=default
(0.000) SHOW INDEX FROM `auth_group`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group'
            ; args=['auth_group']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group']; alias=default
(0.000) SELECT * FROM `auth_group` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'auth_group_permissions'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['auth_group_permissions']; alias=default
(0.015) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_group_permissions'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_group_permissions']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group_permissions'
            ; args=['auth_group_permissions']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group_permissions' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group_permissions']; alias=default
(0.000) SELECT * FROM `auth_group_permissions` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_group_permissions'
                ; args=['auth_group_permissions']; alias=default
(0.000) SHOW INDEX FROM `auth_group_permissions`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_group_permissions'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_group_permissions']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group_permissions'
            ; args=['auth_group_permissions']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group_permissions' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group_permissions']; alias=default
(0.000) SELECT * FROM `auth_group_permissions` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_group_permissions'
                ; args=['auth_group_permissions']; alias=default
(0.000) SHOW INDEX FROM `auth_group_permissions`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group_permissions'
            ; args=['auth_group_permissions']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group_permissions' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group_permissions']; alias=default
(0.000) SELECT * FROM `auth_group_permissions` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_group'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_group']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group'
            ; args=['auth_group']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group']; alias=default
(0.000) SELECT * FROM `auth_group` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_group'
                ; args=['auth_group']; alias=default
(0.000) SHOW INDEX FROM `auth_group`; args=None; alias=default
(0.016) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_permission'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_permission']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_permission'
            ; args=['auth_permission']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_permission' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_permission']; alias=default
(0.000) SELECT * FROM `auth_permission` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_permission'
                ; args=['auth_permission']; alias=default
(0.000) SHOW INDEX FROM `auth_permission`; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'auth_permission'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['auth_permission']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_permission'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_permission']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_permission'
            ; args=['auth_permission']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_permission' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_permission']; alias=default
(0.000) SELECT * FROM `auth_permission` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_permission'
                ; args=['auth_permission']; alias=default
(0.000) SHOW INDEX FROM `auth_permission`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_permission'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_permission']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_permission'
            ; args=['auth_permission']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_permission' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_permission']; alias=default
(0.000) SELECT * FROM `auth_permission` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_permission'
                ; args=['auth_permission']; alias=default
(0.016) SHOW INDEX FROM `auth_permission`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_permission'
            ; args=['auth_permission']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_permission' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_permission']; alias=default
(0.000) SELECT * FROM `auth_permission` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_content_type'
            ORDER BY kc.`ordinal_position`
        ; args=['django_content_type']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_content_type'
            ; args=['django_content_type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_content_type' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_content_type']; alias=default
(0.000) SELECT * FROM `django_content_type` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_content_type'
                ; args=['django_content_type']; alias=default
(0.000) SHOW INDEX FROM `django_content_type`; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'auth_user'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user'
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user']; alias=default
(0.000) SELECT * FROM `auth_user` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user'
                ; args=['auth_user']; alias=default
(0.000) SHOW INDEX FROM `auth_user`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user'
            ; args=['auth_user']; alias=default
(0.015) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user']; alias=default
(0.000) SELECT * FROM `auth_user` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user'
                ; args=['auth_user']; alias=default
(0.000) SHOW INDEX FROM `auth_user`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user'
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user']; alias=default
(0.000) SELECT * FROM `auth_user` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'auth_user_groups'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['auth_user_groups']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user_groups'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user_groups']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user_groups'
            ; args=['auth_user_groups']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user_groups' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user_groups']; alias=default
(0.000) SELECT * FROM `auth_user_groups` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user_groups'
                ; args=['auth_user_groups']; alias=default
(0.000) SHOW INDEX FROM `auth_user_groups`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user_groups'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user_groups']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user_groups'
            ; args=['auth_user_groups']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user_groups' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user_groups']; alias=default
(0.000) SELECT * FROM `auth_user_groups` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user_groups'
                ; args=['auth_user_groups']; alias=default
(0.000) SHOW INDEX FROM `auth_user_groups`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user_groups'
            ; args=['auth_user_groups']; alias=default
(0.016) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user_groups' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user_groups']; alias=default
(0.000) SELECT * FROM `auth_user_groups` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user'
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user']; alias=default
(0.000) SELECT * FROM `auth_user` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user'
                ; args=['auth_user']; alias=default
(0.000) SHOW INDEX FROM `auth_user`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_group'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_group']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_group'
            ; args=['auth_group']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_group' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_group']; alias=default
(0.000) SELECT * FROM `auth_group` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_group'
                ; args=['auth_group']; alias=default
(0.000) SHOW INDEX FROM `auth_group`; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'auth_user_user_permissions'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['auth_user_user_permissions']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user_user_permissions'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user_user_permissions']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user_user_permissions'
            ; args=['auth_user_user_permissions']; alias=default
(0.015) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user_user_permissions' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user_user_permissions']; alias=default
(0.000) SELECT * FROM `auth_user_user_permissions` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user_user_permissions'
                ; args=['auth_user_user_permissions']; alias=default
(0.000) SHOW INDEX FROM `auth_user_user_permissions`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user_user_permissions'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user_user_permissions']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user_user_permissions'
            ; args=['auth_user_user_permissions']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user_user_permissions' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user_user_permissions']; alias=default
(0.000) SELECT * FROM `auth_user_user_permissions` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user_user_permissions'
                ; args=['auth_user_user_permissions']; alias=default
(0.000) SHOW INDEX FROM `auth_user_user_permissions`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user_user_permissions'
            ; args=['auth_user_user_permissions']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user_user_permissions' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user_user_permissions']; alias=default
(0.000) SELECT * FROM `auth_user_user_permissions` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user'
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user']; alias=default
(0.000) SELECT * FROM `auth_user` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user'
                ; args=['auth_user']; alias=default
(0.000) SHOW INDEX FROM `auth_user`; args=None; alias=default
(0.016) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_permission'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_permission']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_permission'
            ; args=['auth_permission']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_permission' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_permission']; alias=default
(0.000) SELECT * FROM `auth_permission` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_permission'
                ; args=['auth_permission']; alias=default
(0.000) SHOW INDEX FROM `auth_permission`; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'book'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['book']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'book'
            ORDER BY kc.`ordinal_position`
        ; args=['book']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'book'
            ; args=['book']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'book' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'book']; alias=default
(0.000) SELECT * FROM `book` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'book'
                ; args=['book']; alias=default
(0.000) SHOW INDEX FROM `book`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'book'
            ORDER BY kc.`ordinal_position`
        ; args=['book']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'book'
            ; args=['book']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'book' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'book']; alias=default
(0.000) SELECT * FROM `book` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'book'
                ; args=['book']; alias=default
(0.000) SHOW INDEX FROM `book`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'book'
            ; args=['book']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'book' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'book']; alias=default
(0.000) SELECT * FROM `book` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'borrow'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['borrow']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'borrow'
            ORDER BY kc.`ordinal_position`
        ; args=['borrow']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'borrow'
            ; args=['borrow']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'borrow' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'borrow']; alias=default
(0.000) SELECT * FROM `borrow` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'borrow'
                ; args=['borrow']; alias=default
(0.000) SHOW INDEX FROM `borrow`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'borrow'
            ORDER BY kc.`ordinal_position`
        ; args=['borrow']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'borrow'
            ; args=['borrow']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'borrow' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'borrow']; alias=default
(0.000) SELECT * FROM `borrow` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'borrow'
                ; args=['borrow']; alias=default
(0.000) SHOW INDEX FROM `borrow`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'borrow'
            ; args=['borrow']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'borrow' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'borrow']; alias=default
(0.000) SELECT * FROM `borrow` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'borrowdetails'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['borrowdetails']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'borrowdetails'
            ORDER BY kc.`ordinal_position`
        ; args=['borrowdetails']; alias=default
(0.015) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'borrowdetails'
            ; args=['borrowdetails']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'borrowdetails' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'borrowdetails']; alias=default
(0.000) SELECT * FROM `borrowdetails` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'borrowdetails'
                ; args=['borrowdetails']; alias=default
(0.000) SHOW INDEX FROM `borrowdetails`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'borrowdetails'
            ORDER BY kc.`ordinal_position`
        ; args=['borrowdetails']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'borrowdetails'
            ; args=['borrowdetails']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'borrowdetails' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'borrowdetails']; alias=default
(0.000) SELECT * FROM `borrowdetails` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'borrowdetails'
                ; args=['borrowdetails']; alias=default
(0.000) SHOW INDEX FROM `borrowdetails`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'borrowdetails'
            ; args=['borrowdetails']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'borrowdetails' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'borrowdetails']; alias=default
(0.000) SELECT * FROM `borrowdetails` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'category'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['category']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'category'
            ORDER BY kc.`ordinal_position`
        ; args=['category']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'category'
            ; args=['category']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'category' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'category']; alias=default
(0.000) SELECT * FROM `category` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'category'
                ; args=['category']; alias=default
(0.000) SHOW INDEX FROM `category`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'category'
            ORDER BY kc.`ordinal_position`
        ; args=['category']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'category'
            ; args=['category']; alias=default
(0.016) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'category' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'category']; alias=default
(0.000) SELECT * FROM `category` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'category'
                ; args=['category']; alias=default
(0.000) SHOW INDEX FROM `category`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'category'
            ; args=['category']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'category' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'category']; alias=default
(0.000) SELECT * FROM `category` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'django_admin_log'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['django_admin_log']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_admin_log'
            ORDER BY kc.`ordinal_position`
        ; args=['django_admin_log']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_admin_log'
            ; args=['django_admin_log']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_admin_log' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_admin_log']; alias=default
(0.000) SELECT * FROM `django_admin_log` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_admin_log'
                ; args=['django_admin_log']; alias=default
(0.000) SHOW INDEX FROM `django_admin_log`; args=None; alias=default
(0.016) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_admin_log'
            ORDER BY kc.`ordinal_position`
        ; args=['django_admin_log']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_admin_log'
            ; args=['django_admin_log']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_admin_log' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_admin_log']; alias=default
(0.000) SELECT * FROM `django_admin_log` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_admin_log'
                ; args=['django_admin_log']; alias=default
(0.000) SHOW INDEX FROM `django_admin_log`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_admin_log'
            ; args=['django_admin_log']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_admin_log' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_admin_log']; alias=default
(0.000) SELECT * FROM `django_admin_log` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_content_type'
            ORDER BY kc.`ordinal_position`
        ; args=['django_content_type']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_content_type'
            ; args=['django_content_type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_content_type' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_content_type']; alias=default
(0.000) SELECT * FROM `django_content_type` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_content_type'
                ; args=['django_content_type']; alias=default
(0.000) SHOW INDEX FROM `django_content_type`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'auth_user'
            ORDER BY kc.`ordinal_position`
        ; args=['auth_user']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'auth_user'
            ; args=['auth_user']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'auth_user' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'auth_user']; alias=default
(0.000) SELECT * FROM `auth_user` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'auth_user'
                ; args=['auth_user']; alias=default
(0.000) SHOW INDEX FROM `auth_user`; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'django_content_type'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['django_content_type']; alias=default
(0.015) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_content_type'
            ORDER BY kc.`ordinal_position`
        ; args=['django_content_type']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_content_type'
            ; args=['django_content_type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_content_type' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_content_type']; alias=default
(0.000) SELECT * FROM `django_content_type` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_content_type'
                ; args=['django_content_type']; alias=default
(0.000) SHOW INDEX FROM `django_content_type`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_content_type'
            ORDER BY kc.`ordinal_position`
        ; args=['django_content_type']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_content_type'
            ; args=['django_content_type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_content_type' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_content_type']; alias=default
(0.000) SELECT * FROM `django_content_type` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_content_type'
                ; args=['django_content_type']; alias=default
(0.000) SHOW INDEX FROM `django_content_type`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_content_type'
            ; args=['django_content_type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_content_type' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_content_type']; alias=default
(0.000) SELECT * FROM `django_content_type` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'django_migrations'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['django_migrations']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_migrations'
            ORDER BY kc.`ordinal_position`
        ; args=['django_migrations']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_migrations'
            ; args=['django_migrations']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_migrations' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_migrations']; alias=default
(0.000) SELECT * FROM `django_migrations` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_migrations'
                ; args=['django_migrations']; alias=default
(0.000) SHOW INDEX FROM `django_migrations`; args=None; alias=default
(0.016) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_migrations'
            ORDER BY kc.`ordinal_position`
        ; args=['django_migrations']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_migrations'
            ; args=['django_migrations']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_migrations' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_migrations']; alias=default
(0.000) SELECT * FROM `django_migrations` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_migrations'
                ; args=['django_migrations']; alias=default
(0.000) SHOW INDEX FROM `django_migrations`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_migrations'
            ; args=['django_migrations']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_migrations' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_migrations']; alias=default
(0.000) SELECT * FROM `django_migrations` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'django_session'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['django_session']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_session'
            ORDER BY kc.`ordinal_position`
        ; args=['django_session']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_session'
            ; args=['django_session']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_session' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_session']; alias=default
(0.000) SELECT * FROM `django_session` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_session'
                ; args=['django_session']; alias=default
(0.000) SHOW INDEX FROM `django_session`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'django_session'
            ORDER BY kc.`ordinal_position`
        ; args=['django_session']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_session'
            ; args=['django_session']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_session' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_session']; alias=default
(0.000) SELECT * FROM `django_session` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'django_session'
                ; args=['django_session']; alias=default
(0.000) SHOW INDEX FROM `django_session`; args=None; alias=default
(0.015) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'django_session'
            ; args=['django_session']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8mb4_0900_ai_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'django_session' AND table_schema = DATABASE()
            ; args=['utf8mb4_0900_ai_ci', 'django_session']; alias=default
(0.000) SELECT * FROM `django_session` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'lost_book'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['lost_book']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'lost_book'
            ORDER BY kc.`ordinal_position`
        ; args=['lost_book']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'lost_book'
            ; args=['lost_book']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'lost_book' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'lost_book']; alias=default
(0.000) SELECT * FROM `lost_book` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'lost_book'
                ; args=['lost_book']; alias=default
(0.000) SHOW INDEX FROM `lost_book`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'lost_book'
            ORDER BY kc.`ordinal_position`
        ; args=['lost_book']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'lost_book'
            ; args=['lost_book']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'lost_book' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'lost_book']; alias=default
(0.000) SELECT * FROM `lost_book` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'lost_book'
                ; args=['lost_book']; alias=default
(0.000) SHOW INDEX FROM `lost_book`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'lost_book'
            ; args=['lost_book']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'lost_book' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'lost_book']; alias=default
(0.000) SELECT * FROM `lost_book` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'member'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['member']; alias=default
(0.016) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'member'
            ORDER BY kc.`ordinal_position`
        ; args=['member']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'member'
            ; args=['member']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'member' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'member']; alias=default
(0.000) SELECT * FROM `member` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'member'
                ; args=['member']; alias=default
(0.000) SHOW INDEX FROM `member`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'member'
            ORDER BY kc.`ordinal_position`
        ; args=['member']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'member'
            ; args=['member']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'member' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'member']; alias=default
(0.000) SELECT * FROM `member` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'member'
                ; args=['member']; alias=default
(0.000) SHOW INDEX FROM `member`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'member'
            ; args=['member']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'member' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'member']; alias=default
(0.000) SELECT * FROM `member` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'type'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['type']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'type'
            ORDER BY kc.`ordinal_position`
        ; args=['type']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'type'
            ; args=['type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'type' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'type']; alias=default
(0.000) SELECT * FROM `type` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'type'
                ; args=['type']; alias=default
(0.000) SHOW INDEX FROM `type`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'type'
            ORDER BY kc.`ordinal_position`
        ; args=['type']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'type'
            ; args=['type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'type' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'type']; alias=default
(0.000) SELECT * FROM `type` LIMIT 1; args=None; alias=default
(0.016) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'type'
                ; args=['type']; alias=default
(0.000) SHOW INDEX FROM `type`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'type'
            ; args=['type']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'utf8_general_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'type' AND table_schema = DATABASE()
            ; args=['utf8_general_ci', 'type']; alias=default
(0.000) SELECT * FROM `type` LIMIT 1; args=None; alias=default
(0.000) 
            SELECT column_name, referenced_column_name, referenced_table_name
            FROM information_schema.key_column_usage
            WHERE table_name = 'users'
                AND table_schema = DATABASE()
                AND referenced_table_name IS NOT NULL
                AND referenced_column_name IS NOT NULL
            ; args=['users']; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'users'
            ORDER BY kc.`ordinal_position`
        ; args=['users']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'users'
            ; args=['users']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'users' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'users']; alias=default
(0.000) SELECT * FROM `users` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'users'
                ; args=['users']; alias=default
(0.000) SHOW INDEX FROM `users`; args=None; alias=default
(0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`,
                c.`constraint_type`
            FROM
                information_schema.key_column_usage AS kc,
                information_schema.table_constraints AS c
            WHERE
                kc.table_schema = DATABASE() AND
                c.table_schema = kc.table_schema AND
                c.constraint_name = kc.constraint_name AND
                c.constraint_type != 'CHECK' AND
                kc.table_name = 'users'
            ORDER BY kc.`ordinal_position`
        ; args=['users']; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'users'
            ; args=['users']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'users' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'users']; alias=default
(0.000) SELECT * FROM `users` LIMIT 1; args=None; alias=default
(0.000) 
                    SELECT cc.constraint_name, cc.check_clause
                    FROM
                        information_schema.check_constraints AS cc,
                        information_schema.table_constraints AS tc
                    WHERE
                        cc.constraint_schema = DATABASE() AND
                        tc.table_schema = cc.constraint_schema AND
                        cc.constraint_name = tc.constraint_name AND
                        tc.constraint_type = 'CHECK' AND
                        tc.table_name = 'users'
                ; args=['users']; alias=default
(0.000) SHOW INDEX FROM `users`; args=None; alias=default
(0.000) 
            SELECT  table_collation
            FROM    information_schema.tables
            WHERE   table_schema = DATABASE()
            AND     table_name = 'users'
            ; args=['users']; alias=default
(0.000) 
            SELECT
                column_name, data_type, character_maximum_length,
                numeric_precision, numeric_scale, extra, column_default,
                CASE
                    WHEN collation_name = 'latin1_swedish_ci' THEN NULL
                    ELSE collation_name
                END AS collation_name,
                CASE
                    WHEN column_type LIKE '% unsigned' THEN 1
                    ELSE 0
                END AS is_unsigned,
                column_comment
            FROM information_schema.columns
            WHERE table_name = 'users' AND table_schema = DATABASE()
            ; args=['latin1_swedish_ci', 'users']; alias=default
(0.000) SELECT * FROM `users` LIMIT 1; args=None; alias=default
Watching for file changes with StatReloader
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) 
            SELECT
                table_name,
                table_type,
                table_comment
            FROM information_schema.tables
            WHERE table_schema = DATABASE()
            ; args=None; alias=default
(0.000) SELECT `django_migrations`.`id`, `django_migrations`.`app`, `django_migrations`.`name`, `django_migrations`.`applied` FROM `django_migrations`; args=(); alias=default
Not Found: /
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 17 LIMIT 21; args=(17,); alias=default
Not Found: /edit_book/static/js/jquery-3.7.0.min.js
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/css/bootstrap.css
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/js/bootstrap.min.js
Not Found: /edit_book/static/plugins/font-awesome-4.7.0/css/font-awesome.css
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 17 LIMIT 21; args=(17,); alias=default
Not Found: /edit_book/static/plugins/font-awesome-4.7.0/css/font-awesome.css
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/css/bootstrap.css
Not Found: /edit_book/static/js/jquery-3.7.0.min.js
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/js/bootstrap.min.js
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`status` = 'Lost'; args=('Lost',); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 17 LIMIT 21; args=(17,); alias=default
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/css/bootstrap.css
Not Found: /edit_book/static/js/jquery-3.7.0.min.js
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/js/bootstrap.min.js
Not Found: /edit_book/static/plugins/font-awesome-4.7.0/css/font-awesome.css
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `member`.`member_id`, `member`.`firstname`, `member`.`lastname`, `member`.`gender`, `member`.`address`, `member`.`contact`, `member`.`type`, `member`.`year_level`, `member`.`status` FROM `member`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `borrow_view`.`borrow_id`, `borrow_view`.`member_id`, `borrow_view`.`date_borrow`, `borrow_view`.`due_date`, `borrow_view`.`borrow_details_id`, `borrow_view`.`book_id`, `borrow_view`.`borrow_status`, `borrow_view`.`date_return` FROM `borrow_view`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `member`.`member_id`, `member`.`firstname`, `member`.`lastname`, `member`.`gender`, `member`.`address`, `member`.`contact`, `member`.`type`, `member`.`year_level`, `member`.`status` FROM `member`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `member`.`member_id`, `member`.`firstname`, `member`.`lastname`, `member`.`gender`, `member`.`address`, `member`.`contact`, `member`.`type`, `member`.`year_level`, `member`.`status` FROM `member`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `member`.`member_id`, `member`.`firstname`, `member`.`lastname`, `member`.`gender`, `member`.`address`, `member`.`contact`, `member`.`type`, `member`.`year_level`, `member`.`status` FROM `member`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `member`.`member_id`, `member`.`firstname`, `member`.`lastname`, `member`.`gender`, `member`.`address`, `member`.`contact`, `member`.`type`, `member`.`year_level`, `member`.`status` FROM `member`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 38 LIMIT 21; args=(38,); alias=default
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/css/bootstrap.css
Not Found: /edit_book/static/js/jquery-3.7.0.min.js
Not Found: /edit_book/static/plugins/font-awesome-4.7.0/css/font-awesome.css
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/js/bootstrap.min.js
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 38 LIMIT 21; args=(38,); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 38 LIMIT 21; args=(38,); alias=default
(0.015) UPDATE `book` SET `book_title` = 'hello-change', `category_id` = 2, `author` = 'hello', `book_copies` = 3, `book_pub` = 'world', `publisher_name` = 'world', `isbn` = '111', `copyright_year` = 7, `date_receive` = '', `date_added` = '2013-12-11 06:47:11', `status` = 'Lost' WHERE `book`.`book_id` = 38; args=('hello-change', 2, 'hello', 3, 'world', 'world', '111', 7, '', '2013-12-11 06:47:11', 'Lost', 38); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.016) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`status` = 'Lost'; args=('Lost',); alias=default
D:\PycharmProjects\Django_Test\app_test\books.py changed, reloading.
Watching for file changes with StatReloader
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) 
            SELECT
                table_name,
                table_type,
                table_comment
            FROM information_schema.tables
            WHERE table_schema = DATABASE()
            ; args=None; alias=default
(0.000) SELECT `django_migrations`.`id`, `django_migrations`.`app`, `django_migrations`.`name`, `django_migrations`.`applied` FROM `django_migrations`; args=(); alias=default
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 46 LIMIT 21; args=(46,); alias=default
Not Found: /edit_book/static/plugins/font-awesome-4.7.0/css/font-awesome.css
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/js/bootstrap.min.js
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/css/bootstrap.css
Not Found: /edit_book/static/js/jquery-3.7.0.min.js
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 46 LIMIT 21; args=(46,); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 46 LIMIT 21; args=(46,); alias=default
(0.000) UPDATE `book` SET `book_title` = 'hello-change', `category_id` = 2, `author` = 'hello', `book_copies` = 22, `book_pub` = 'world', `publisher_name` = 'world', `isbn` = '111', `copyright_year` = 22, `date_receive` = '', `date_added` = '2013-12-11 06:47:11', `status` = 'Lost' WHERE `book`.`book_id` = 46; args=('hello-change', 2, 'hello', 22, 'world', 'world', '111', 22, '', '2013-12-11 06:47:11', 'Lost', 46); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
Internal Server Error: /edit_book/38/
Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 61, in callproc
    return self.cursor.callproc(procname, params)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 313, in callproc
    self._query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1048, "Column 'ISBN' cannot be null")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\Anaconda\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\PycharmProjects\Django_Test\app_test\books.py", line 115, in edit_book
    cursor.callproc('insert_lost_book', [book_id])
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 64, in callproc
    return self.cursor.callproc(procname, params, kparams)
  File "D:\Anaconda\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 61, in callproc
    return self.cursor.callproc(procname, params)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 313, in callproc
    self._query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1048, "Column 'ISBN' cannot be null")
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
Internal Server Error: /edit_book/46/
Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 61, in callproc
    return self.cursor.callproc(procname, params)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 313, in callproc
    self._query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1048, "Column 'ISBN' cannot be null")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\Anaconda\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\PycharmProjects\Django_Test\app_test\books.py", line 115, in edit_book
    cursor.callproc('insert_lost_book', [book_id])
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 64, in callproc
    return self.cursor.callproc(procname, params, kparams)
  File "D:\Anaconda\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 61, in callproc
    return self.cursor.callproc(procname, params)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 313, in callproc
    self._query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1048, "Column 'ISBN' cannot be null")
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 38 LIMIT 21; args=(38,); alias=default
Not Found: /delete_book/static/js/jquery-3.7.0.min.js
Not Found: /delete_book/static/plugins/font-awesome-4.7.0/css/font-awesome.css
Not Found: /delete_book/static/plugins/bootstrap-3.4.1/css/bootstrap.css
Not Found: /delete_book/static/plugins/bootstrap-3.4.1/js/bootstrap.min.js
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 38 LIMIT 21; args=(38,); alias=default
(0.000) DELETE FROM `book` WHERE `book`.`book_id` IN (38); args=(38,); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 46 LIMIT 21; args=(46,); alias=default
Not Found: /delete_book/static/plugins/bootstrap-3.4.1/css/bootstrap.css
Not Found: /delete_book/static/js/jquery-3.7.0.min.js
Not Found: /delete_book/static/plugins/bootstrap-3.4.1/js/bootstrap.min.js
Not Found: /delete_book/static/plugins/font-awesome-4.7.0/css/font-awesome.css
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 46 LIMIT 21; args=(46,); alias=default
(0.000) DELETE FROM `book` WHERE `book`.`book_id` IN (46); args=(46,); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.016) INSERT INTO `book` (`book_title`, `category_id`, `author`, `book_copies`, `book_pub`, `publisher_name`, `isbn`, `copyright_year`, `date_receive`, `date_added`, `status`) VALUES ('hello-change', 2, 'hello', 22, 'world', 'world', '123-132', 2222, '', '2013-12-11 06:47:11', 'New'); args=['hello-change', 2, 'hello', 22, 'world', 'world', '123-132', 2222, '', '2013-12-11 06:47:11', 'New']; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 47 LIMIT 21; args=(47,); alias=default
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/css/bootstrap.css
Not Found: /edit_book/static/js/jquery-3.7.0.min.js
Not Found: /edit_book/static/plugins/font-awesome-4.7.0/css/font-awesome.css
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/js/bootstrap.min.js
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 47 LIMIT 21; args=(47,); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 47 LIMIT 21; args=(47,); alias=default
(0.000) UPDATE `book` SET `book_title` = 'hello-change', `category_id` = 2, `author` = 'hello', `book_copies` = 22, `book_pub` = 'world', `publisher_name` = 'world', `isbn` = '123-132', `copyright_year` = 2222, `date_receive` = '', `date_added` = '2013-12-11 06:47:11', `status` = 'Lost' WHERE `book`.`book_id` = 47; args=('hello-change', 2, 'hello', 22, 'world', 'world', '123-132', 2222, '', '2013-12-11 06:47:11', 'Lost', 47); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
D:\PycharmProjects\Django_Test\app_test\books.py changed, reloading.
Watching for file changes with StatReloader
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) 
            SELECT
                table_name,
                table_type,
                table_comment
            FROM information_schema.tables
            WHERE table_schema = DATABASE()
            ; args=None; alias=default
(0.000) SELECT `django_migrations`.`id`, `django_migrations`.`app`, `django_migrations`.`name`, `django_migrations`.`applied` FROM `django_migrations`; args=(); alias=default
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 47 LIMIT 21; args=(47,); alias=default
Not Found: /delete_book/static/plugins/font-awesome-4.7.0/css/font-awesome.css
Not Found: /delete_book/static/plugins/bootstrap-3.4.1/css/bootstrap.css
Not Found: /delete_book/static/js/jquery-3.7.0.min.js
Not Found: /delete_book/static/plugins/bootstrap-3.4.1/js/bootstrap.min.js
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
Internal Server Error: /edit_book/47/
Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 61, in callproc
    return self.cursor.callproc(procname, params)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 313, in callproc
    self._query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1048, "Column 'ISBN' cannot be null")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\Anaconda\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\PycharmProjects\Django_Test\app_test\books.py", line 116, in edit_book
    cursor.callproc('insert_lost_book', [book_id])
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 64, in callproc
    return self.cursor.callproc(procname, params, kparams)
  File "D:\Anaconda\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 61, in callproc
    return self.cursor.callproc(procname, params)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 313, in callproc
    self._query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1048, "Column 'ISBN' cannot be null")
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 47 LIMIT 21; args=(47,); alias=default
Not Found: /delete_book/static/js/jquery-3.7.0.min.js
Not Found: /delete_book/static/plugins/bootstrap-3.4.1/css/bootstrap.css
Not Found: /delete_book/static/plugins/bootstrap-3.4.1/js/bootstrap.min.js
Not Found: /delete_book/static/plugins/font-awesome-4.7.0/css/font-awesome.css
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 47 LIMIT 21; args=(47,); alias=default
(0.000) DELETE FROM `book` WHERE `book`.`book_id` IN (47); args=(47,); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) INSERT INTO `book` (`book_title`, `category_id`, `author`, `book_copies`, `book_pub`, `publisher_name`, `isbn`, `copyright_year`, `date_receive`, `date_added`, `status`) VALUES ('hello-change', 2, 'hello', 22, 'world', 'world', '123-132', 2222, '', '2013-12-11 06:47:11', 'New'); args=['hello-change', 2, 'hello', 22, 'world', 'world', '123-132', 2222, '', '2013-12-11 06:47:11', 'New']; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.015) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 48 LIMIT 21; args=(48,); alias=default
Not Found: /edit_book/static/js/jquery-3.7.0.min.js
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/css/bootstrap.css
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/js/bootstrap.min.js
Not Found: /edit_book/static/plugins/font-awesome-4.7.0/css/font-awesome.css
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 48 LIMIT 21; args=(48,); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 48 LIMIT 21; args=(48,); alias=default
(0.000) UPDATE `book` SET `book_title` = 'hello-change', `category_id` = 2, `author` = 'hello', `book_copies` = 22, `book_pub` = 'world', `publisher_name` = 'world', `isbn` = '123-132', `copyright_year` = 2222, `date_receive` = '', `date_added` = '2013-12-11 06:47:11', `status` = 'Lost' WHERE `book`.`book_id` = 48; args=('hello-change', 2, 'hello', 22, 'world', 'world', '123-132', 2222, '', '2013-12-11 06:47:11', 'Lost', 48); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 47 LIMIT 21; args=(47,); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` LIMIT 21; args=(); alias=default
Internal Server Error: /edit_book/47/
Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\Anaconda\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\PycharmProjects\Django_Test\app_test\books.py", line 117, in edit_book
    book = Book.objects.get(book_id=book_id)
  File "D:\Anaconda\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda\lib\site-packages\django\db\models\query.py", line 637, in get
    raise self.model.DoesNotExist(
app_test.models.Book.DoesNotExist: Book matching query does not exist.
D:\PycharmProjects\Django_Test\app_test\books.py changed, reloading.
Watching for file changes with StatReloader
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) 
            SELECT
                table_name,
                table_type,
                table_comment
            FROM information_schema.tables
            WHERE table_schema = DATABASE()
            ; args=None; alias=default
(0.000) SELECT `django_migrations`.`id`, `django_migrations`.`app`, `django_migrations`.`name`, `django_migrations`.`applied` FROM `django_migrations`; args=(); alias=default
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 47 LIMIT 21; args=(47,); alias=default
(0.016) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` LIMIT 21; args=(); alias=default
Internal Server Error: /edit_book/47/
Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\Anaconda\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\PycharmProjects\Django_Test\app_test\books.py", line 115, in edit_book
    book = Book.objects.get(book_id=book_id)
  File "D:\Anaconda\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Anaconda\lib\site-packages\django\db\models\query.py", line 637, in get
    raise self.model.DoesNotExist(
app_test.models.Book.DoesNotExist: Book matching query does not exist.
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.016) INSERT INTO `book` (`book_title`, `category_id`, `author`, `book_copies`, `book_pub`, `publisher_name`, `isbn`, `copyright_year`, `date_receive`, `date_added`, `status`) VALUES ('11111', 3, '111', 111, '111', '111', '123-132', 1111, '', '2013-12-11 06:47:11', 'New'); args=['11111', 3, '111', 111, '111', '111', '123-132', 1111, '', '2013-12-11 06:47:11', 'New']; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 49 LIMIT 21; args=(49,); alias=default
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/css/bootstrap.css
Not Found: /edit_book/static/js/jquery-3.7.0.min.js
Not Found: /edit_book/static/plugins/font-awesome-4.7.0/css/font-awesome.css
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/js/bootstrap.min.js
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 49 LIMIT 21; args=(49,); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 49 LIMIT 21; args=(49,); alias=default
(0.015) UPDATE `book` SET `book_title` = 'hello-change', `category_id` = 2, `author` = '111', `book_copies` = 111, `book_pub` = '111', `publisher_name` = '111', `isbn` = '123-132', `copyright_year` = 1111, `date_receive` = '', `date_added` = '2013-12-11 06:47:11', `status` = 'Lost' WHERE `book`.`book_id` = 49; args=('hello-change', 2, '111', 111, '111', '111', '123-132', 1111, '', '2013-12-11 06:47:11', 'Lost', 49); alias=default
Internal Server Error: /edit_book/49/
Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 61, in callproc
    return self.cursor.callproc(procname, params)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 313, in callproc
    self._query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1048, "Column 'ISBN' cannot be null")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\Anaconda\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\PycharmProjects\Django_Test\app_test\books.py", line 145, in edit_book
    cursor.callproc('insert_lost_book', [book_id])
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 64, in callproc
    return self.cursor.callproc(procname, params, kparams)
  File "D:\Anaconda\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 61, in callproc
    return self.cursor.callproc(procname, params)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 313, in callproc
    self._query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1048, "Column 'ISBN' cannot be null")
D:\PycharmProjects\Django_Test\app_test\books.py changed, reloading.
Watching for file changes with StatReloader
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) 
            SELECT
                table_name,
                table_type,
                table_comment
            FROM information_schema.tables
            WHERE table_schema = DATABASE()
            ; args=None; alias=default
(0.000) SELECT `django_migrations`.`id`, `django_migrations`.`app`, `django_migrations`.`name`, `django_migrations`.`applied` FROM `django_migrations`; args=(); alias=default
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 49 LIMIT 21; args=(49,); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 49 LIMIT 21; args=(49,); alias=default
(0.000) UPDATE `book` SET `book_title` = 'hello-change', `category_id` = 2, `author` = '111', `book_copies` = 111, `book_pub` = '111', `publisher_name` = '111', `isbn` = '123-132', `copyright_year` = 1111, `date_receive` = '', `date_added` = '2013-12-11 06:47:11', `status` = 'Lost' WHERE `book`.`book_id` = 49; args=('hello-change', 2, '111', 111, '111', '111', '123-132', 1111, '', '2013-12-11 06:47:11', 'Lost', 49); alias=default
Internal Server Error: /edit_book/49/
Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 61, in callproc
    return self.cursor.callproc(procname, params)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 313, in callproc
    self._query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1048, "Column 'Member_No' cannot be null")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\Anaconda\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\PycharmProjects\Django_Test\app_test\books.py", line 146, in edit_book
    cursor.callproc('insert_lost_book', [book_id])
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 64, in callproc
    return self.cursor.callproc(procname, params, kparams)
  File "D:\Anaconda\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 61, in callproc
    return self.cursor.callproc(procname, params)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 313, in callproc
    self._query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1048, "Column 'Member_No' cannot be null")
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 49 LIMIT 21; args=(49,); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 49 LIMIT 21; args=(49,); alias=default
(0.000) UPDATE `book` SET `book_title` = 'hello-change', `category_id` = 2, `author` = '111', `book_copies` = 111, `book_pub` = '111', `publisher_name` = '111', `isbn` = '123-132', `copyright_year` = 1111, `date_receive` = '', `date_added` = '2013-12-11 06:47:11', `status` = 'Lost' WHERE `book`.`book_id` = 49; args=('hello-change', 2, '111', 111, '111', '111', '123-132', 1111, '', '2013-12-11 06:47:11', 'Lost', 49); alias=default
Internal Server Error: /edit_book/49/
Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 61, in callproc
    return self.cursor.callproc(procname, params)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 313, in callproc
    self._query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1048, "Column 'Member_No' cannot be null")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\Anaconda\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\PycharmProjects\Django_Test\app_test\books.py", line 146, in edit_book
    cursor.callproc('insert_lost_book', [book_id])
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 64, in callproc
    return self.cursor.callproc(procname, params, kparams)
  File "D:\Anaconda\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 61, in callproc
    return self.cursor.callproc(procname, params)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 313, in callproc
    self._query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1048, "Column 'Member_No' cannot be null")
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 49 LIMIT 21; args=(49,); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 49 LIMIT 21; args=(49,); alias=default
(0.000) UPDATE `book` SET `book_title` = 'hello-change', `category_id` = 2, `author` = '111', `book_copies` = 111, `book_pub` = '111', `publisher_name` = '111', `isbn` = '123-132', `copyright_year` = 1111, `date_receive` = '', `date_added` = '2013-12-11 06:47:11', `status` = 'Lost' WHERE `book`.`book_id` = 49; args=('hello-change', 2, '111', 111, '111', '111', '123-132', 1111, '', '2013-12-11 06:47:11', 'Lost', 49); alias=default
Internal Server Error: /edit_book/49/
Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 61, in callproc
    return self.cursor.callproc(procname, params)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 313, in callproc
    self._query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1048, "Column 'Member_No' cannot be null")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\Anaconda\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\PycharmProjects\Django_Test\app_test\books.py", line 146, in edit_book
    cursor.callproc('insert_lost_book', [book_id])
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 64, in callproc
    return self.cursor.callproc(procname, params, kparams)
  File "D:\Anaconda\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 61, in callproc
    return self.cursor.callproc(procname, params)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 313, in callproc
    self._query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1048, "Column 'Member_No' cannot be null")
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 49 LIMIT 21; args=(49,); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 49 LIMIT 21; args=(49,); alias=default
(0.000) UPDATE `book` SET `book_title` = 'hello-change', `category_id` = 2, `author` = '111', `book_copies` = 111, `book_pub` = '111', `publisher_name` = '111', `isbn` = '123-132', `copyright_year` = 1111, `date_receive` = '', `date_added` = '2013-12-11 06:47:11', `status` = 'Lost' WHERE `book`.`book_id` = 49; args=('hello-change', 2, '111', 111, '111', '111', '123-132', 1111, '', '2013-12-11 06:47:11', 'Lost', 49); alias=default
Internal Server Error: /edit_book/49/
Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 61, in callproc
    return self.cursor.callproc(procname, params)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 313, in callproc
    self._query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1048, "Column 'ISBN' cannot be null")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\Anaconda\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\PycharmProjects\Django_Test\app_test\books.py", line 146, in edit_book
    cursor.callproc('insert_lost_book', [book_id])
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 64, in callproc
    return self.cursor.callproc(procname, params, kparams)
  File "D:\Anaconda\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 61, in callproc
    return self.cursor.callproc(procname, params)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 313, in callproc
    self._query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1048, "Column 'ISBN' cannot be null")
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 49 LIMIT 21; args=(49,); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 49 LIMIT 21; args=(49,); alias=default
(0.000) UPDATE `book` SET `book_title` = 'hello-change', `category_id` = 2, `author` = '111', `book_copies` = 111, `book_pub` = '111', `publisher_name` = '111', `isbn` = '123-132', `copyright_year` = 1111, `date_receive` = '', `date_added` = '2013-12-11 06:47:11', `status` = 'Lost' WHERE `book`.`book_id` = 49; args=('hello-change', 2, '111', 111, '111', '111', '123-132', 1111, '', '2013-12-11 06:47:11', 'Lost', 49); alias=default
Internal Server Error: /edit_book/49/
Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 61, in callproc
    return self.cursor.callproc(procname, params)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 313, in callproc
    self._query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1048, "Column 'ISBN' cannot be null")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\Anaconda\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\PycharmProjects\Django_Test\app_test\books.py", line 146, in edit_book
    cursor.callproc('insert_lost_book', [book_id])
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 64, in callproc
    return self.cursor.callproc(procname, params, kparams)
  File "D:\Anaconda\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 61, in callproc
    return self.cursor.callproc(procname, params)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 313, in callproc
    self._query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1048, "Column 'ISBN' cannot be null")
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 49 LIMIT 21; args=(49,); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 49 LIMIT 21; args=(49,); alias=default
(0.000) UPDATE `book` SET `book_title` = 'hello-change', `category_id` = 2, `author` = '111', `book_copies` = 111, `book_pub` = '111', `publisher_name` = '111', `isbn` = '123-132', `copyright_year` = 1111, `date_receive` = '', `date_added` = '2013-12-11 06:47:11', `status` = 'Lost' WHERE `book`.`book_id` = 49; args=('hello-change', 2, '111', 111, '111', '111', '123-132', 1111, '', '2013-12-11 06:47:11', 'Lost', 49); alias=default
Internal Server Error: /edit_book/49/
Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 61, in callproc
    return self.cursor.callproc(procname, params)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 313, in callproc
    self._query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1048, "Column 'ISBN' cannot be null")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\Anaconda\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\PycharmProjects\Django_Test\app_test\books.py", line 146, in edit_book
    cursor.callproc('insert_lost_book', [book_id])
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 64, in callproc
    return self.cursor.callproc(procname, params, kparams)
  File "D:\Anaconda\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 61, in callproc
    return self.cursor.callproc(procname, params)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 313, in callproc
    self._query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1048, "Column 'ISBN' cannot be null")
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 49 LIMIT 21; args=(49,); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 49 LIMIT 21; args=(49,); alias=default
(0.000) UPDATE `book` SET `book_title` = 'hello-change', `category_id` = 2, `author` = '111', `book_copies` = 111, `book_pub` = '111', `publisher_name` = '111', `isbn` = '123-132', `copyright_year` = 1111, `date_receive` = '', `date_added` = '2013-12-11 06:47:11', `status` = 'Lost' WHERE `book`.`book_id` = 49; args=('hello-change', 2, '111', 111, '111', '111', '123-132', 1111, '', '2013-12-11 06:47:11', 'Lost', 49); alias=default
Internal Server Error: /edit_book/49/
Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 61, in callproc
    return self.cursor.callproc(procname, params)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 313, in callproc
    self._query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1048, "Column 'ISBN' cannot be null")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\Anaconda\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\PycharmProjects\Django_Test\app_test\books.py", line 146, in edit_book
    cursor.callproc('insert_lost_book', [book_id])
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 64, in callproc
    return self.cursor.callproc(procname, params, kparams)
  File "D:\Anaconda\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 61, in callproc
    return self.cursor.callproc(procname, params)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 313, in callproc
    self._query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1048, "Column 'ISBN' cannot be null")
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 48 LIMIT 21; args=(48,); alias=default
Not Found: /edit_book/static/js/jquery-3.7.0.min.js
Not Found: /edit_book/static/plugins/font-awesome-4.7.0/css/font-awesome.css
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/css/bootstrap.css
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/js/bootstrap.min.js
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 48 LIMIT 21; args=(48,); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 48 LIMIT 21; args=(48,); alias=default
(0.000) UPDATE `book` SET `book_title` = 'hello-change', `category_id` = 2, `author` = 'hello', `book_copies` = 22, `book_pub` = 'world', `publisher_name` = 'world', `isbn` = '123-132', `copyright_year` = 2222, `date_receive` = '', `date_added` = '2013-12-11 06:47:11', `status` = 'New' WHERE `book`.`book_id` = 48; args=('hello-change', 2, 'hello', 22, 'world', 'world', '123-132', 2222, '', '2013-12-11 06:47:11', 'New', 48); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 48 LIMIT 21; args=(48,); alias=default
Not Found: /edit_book/static/js/jquery-3.7.0.min.js
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/css/bootstrap.css
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/js/bootstrap.min.js
Not Found: /edit_book/static/plugins/font-awesome-4.7.0/css/font-awesome.css
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 48 LIMIT 21; args=(48,); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 48 LIMIT 21; args=(48,); alias=default
(0.015) UPDATE `book` SET `book_title` = 'hello-change', `category_id` = 2, `author` = 'hello', `book_copies` = 22, `book_pub` = 'world', `publisher_name` = 'world', `isbn` = '123-132', `copyright_year` = 2222, `date_receive` = '', `date_added` = '2013-12-11 06:47:11', `status` = 'Lost' WHERE `book`.`book_id` = 48; args=('hello-change', 2, 'hello', 22, 'world', 'world', '123-132', 2222, '', '2013-12-11 06:47:11', 'Lost', 48); alias=default
Internal Server Error: /edit_book/48/
Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 61, in callproc
    return self.cursor.callproc(procname, params)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 313, in callproc
    self._query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.DataError: (1265, "Data truncated for column 'Member_No' at row 1")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\Anaconda\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\PycharmProjects\Django_Test\app_test\books.py", line 146, in edit_book
    cursor.callproc('insert_lost_book', [book_id])
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 64, in callproc
    return self.cursor.callproc(procname, params, kparams)
  File "D:\Anaconda\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 61, in callproc
    return self.cursor.callproc(procname, params)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 313, in callproc
    self._query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.DataError: (1265, "Data truncated for column 'Member_No' at row 1")
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.015) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 48 LIMIT 21; args=(48,); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 48 LIMIT 21; args=(48,); alias=default
(0.000) UPDATE `book` SET `book_title` = 'hello-change', `category_id` = 2, `author` = 'hello', `book_copies` = 22, `book_pub` = 'world', `publisher_name` = 'world', `isbn` = '123-132', `copyright_year` = 2222, `date_receive` = '', `date_added` = '2013-12-11 06:47:11', `status` = 'Lost' WHERE `book`.`book_id` = 48; args=('hello-change', 2, 'hello', 22, 'world', 'world', '123-132', 2222, '', '2013-12-11 06:47:11', 'Lost', 48); alias=default
Internal Server Error: /edit_book/48/
Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 61, in callproc
    return self.cursor.callproc(procname, params)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 313, in callproc
    self._query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.DataError: (1265, "Data truncated for column 'Member_No' at row 1")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\Anaconda\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\PycharmProjects\Django_Test\app_test\books.py", line 146, in edit_book
    cursor.callproc('insert_lost_book', [book_id])
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 64, in callproc
    return self.cursor.callproc(procname, params, kparams)
  File "D:\Anaconda\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 61, in callproc
    return self.cursor.callproc(procname, params)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 313, in callproc
    self._query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.DataError: (1265, "Data truncated for column 'Member_No' at row 1")
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 48 LIMIT 21; args=(48,); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 48 LIMIT 21; args=(48,); alias=default
(0.000) UPDATE `book` SET `book_title` = 'hello-change', `category_id` = 2, `author` = 'hello', `book_copies` = 22, `book_pub` = 'world', `publisher_name` = 'world', `isbn` = '123-132', `copyright_year` = 2222, `date_receive` = '', `date_added` = '2013-12-11 06:47:11', `status` = 'Lost' WHERE `book`.`book_id` = 48; args=('hello-change', 2, 'hello', 22, 'world', 'world', '123-132', 2222, '', '2013-12-11 06:47:11', 'Lost', 48); alias=default
Internal Server Error: /edit_book/48/
Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 61, in callproc
    return self.cursor.callproc(procname, params)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 313, in callproc
    self._query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.DataError: (1265, "Data truncated for column 'Member_No' at row 1")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\Anaconda\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\PycharmProjects\Django_Test\app_test\books.py", line 146, in edit_book
    cursor.callproc('insert_lost_book', [book_id])
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 64, in callproc
    return self.cursor.callproc(procname, params, kparams)
  File "D:\Anaconda\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 61, in callproc
    return self.cursor.callproc(procname, params)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 313, in callproc
    self._query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.DataError: (1265, "Data truncated for column 'Member_No' at row 1")
Watching for file changes with StatReloader
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.016) 
            SELECT
                table_name,
                table_type,
                table_comment
            FROM information_schema.tables
            WHERE table_schema = DATABASE()
            ; args=None; alias=default
(0.000) SELECT `django_migrations`.`id`, `django_migrations`.`app`, `django_migrations`.`name`, `django_migrations`.`applied` FROM `django_migrations`; args=(); alias=default
Not Found: /
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 48 LIMIT 21; args=(48,); alias=default
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/css/bootstrap.css
Not Found: /edit_book/static/plugins/font-awesome-4.7.0/css/font-awesome.css
Not Found: /edit_book/static/js/jquery-3.7.0.min.js
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/js/bootstrap.min.js
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 48 LIMIT 21; args=(48,); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 48 LIMIT 21; args=(48,); alias=default
(0.000) UPDATE `book` SET `book_title` = 'hello-change', `category_id` = 2, `author` = 'hello', `book_copies` = 22, `book_pub` = 'world', `publisher_name` = 'world', `isbn` = '123-132', `copyright_year` = 2222, `date_receive` = '', `date_added` = '2013-12-11 06:47:11', `status` = 'New' WHERE `book`.`book_id` = 48; args=('hello-change', 2, 'hello', 22, 'world', 'world', '123-132', 2222, '', '2013-12-11 06:47:11', 'New', 48); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 48 LIMIT 21; args=(48,); alias=default
Not Found: /edit_book/static/js/jquery-3.7.0.min.js
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/css/bootstrap.css
Not Found: /edit_book/static/plugins/font-awesome-4.7.0/css/font-awesome.css
Not Found: /edit_book/static/plugins/bootstrap-3.4.1/js/bootstrap.min.js
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 48 LIMIT 21; args=(48,); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 48 LIMIT 21; args=(48,); alias=default
(0.000) UPDATE `book` SET `book_title` = 'hello-change', `category_id` = 2, `author` = 'hello', `book_copies` = 22, `book_pub` = 'world', `publisher_name` = 'world', `isbn` = '123-132', `copyright_year` = 2222, `date_receive` = '', `date_added` = '2013-12-11 06:47:11', `status` = 'Lost' WHERE `book`.`book_id` = 48; args=('hello-change', 2, 'hello', 22, 'world', 'world', '123-132', 2222, '', '2013-12-11 06:47:11', 'Lost', 48); alias=default
Internal Server Error: /edit_book/48/
Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 61, in callproc
    return self.cursor.callproc(procname, params)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 313, in callproc
    self._query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.DataError: (1265, "Data truncated for column 'Member_No' at row 1")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Anaconda\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\Anaconda\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\PycharmProjects\Django_Test\app_test\books.py", line 146, in edit_book
    cursor.callproc('insert_lost_book', [book_id])
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 64, in callproc
    return self.cursor.callproc(procname, params, kparams)
  File "D:\Anaconda\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "D:\Anaconda\lib\site-packages\django\db\backends\utils.py", line 61, in callproc
    return self.cursor.callproc(procname, params)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 313, in callproc
    self._query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "D:\Anaconda\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.DataError: (1265, "Data truncated for column 'Member_No' at row 1")
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 48 LIMIT 21; args=(48,); alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 48 LIMIT 21; args=(48,); alias=default
(0.000) UPDATE `book` SET `book_title` = 'hello-change', `category_id` = 2, `author` = 'hello', `book_copies` = 22, `book_pub` = 'world', `publisher_name` = 'world', `isbn` = '123-132', `copyright_year` = 2222, `date_receive` = '', `date_added` = '2013-12-11 06:47:11', `status` = 'Lost' WHERE `book`.`book_id` = 48; args=('hello-change', 2, 'hello', 22, 'world', 'world', '123-132', 2222, '', '2013-12-11 06:47:11', 'Lost', 48); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `borrow_view`.`borrow_id`, `borrow_view`.`member_id`, `borrow_view`.`date_borrow`, `borrow_view`.`due_date`, `borrow_view`.`borrow_details_id`, `borrow_view`.`book_id`, `borrow_view`.`borrow_status`, `borrow_view`.`date_return` FROM `borrow_view`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `member`.`member_id`, `member`.`firstname`, `member`.`lastname`, `member`.`gender`, `member`.`address`, `member`.`contact`, `member`.`type`, `member`.`year_level`, `member`.`status` FROM `member`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `borrow_view`.`borrow_id`, `borrow_view`.`member_id`, `borrow_view`.`date_borrow`, `borrow_view`.`due_date`, `borrow_view`.`borrow_details_id`, `borrow_view`.`book_id`, `borrow_view`.`borrow_status`, `borrow_view`.`date_return` FROM `borrow_view`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `member`.`member_id`, `member`.`firstname`, `member`.`lastname`, `member`.`gender`, `member`.`address`, `member`.`contact`, `member`.`type`, `member`.`year_level`, `member`.`status` FROM `member`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.016) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
D:\PycharmProjects\Django_Test\app_test\books.py changed, reloading.
Watching for file changes with StatReloader
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) 
            SELECT
                table_name,
                table_type,
                table_comment
            FROM information_schema.tables
            WHERE table_schema = DATABASE()
            ; args=None; alias=default
(0.000) SELECT `django_migrations`.`id`, `django_migrations`.`app`, `django_migrations`.`name`, `django_migrations`.`applied` FROM `django_migrations`; args=(); alias=default
D:\PycharmProjects\Django_Test\app_test\books.py changed, reloading.
Watching for file changes with StatReloader
D:\PycharmProjects\Django_Test\app_test\books.py changed, reloading.
Watching for file changes with StatReloader
(0.016) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) 
            SELECT
                table_name,
                table_type,
                table_comment
            FROM information_schema.tables
            WHERE table_schema = DATABASE()
            ; args=None; alias=default
(0.000) SELECT `django_migrations`.`id`, `django_migrations`.`app`, `django_migrations`.`name`, `django_migrations`.`applied` FROM `django_migrations`; args=(); alias=default
D:\PycharmProjects\Django_Test\app_test\books.py changed, reloading.
Watching for file changes with StatReloader
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) 
            SELECT
                table_name,
                table_type,
                table_comment
            FROM information_schema.tables
            WHERE table_schema = DATABASE()
            ; args=None; alias=default
(0.000) SELECT `django_migrations`.`id`, `django_migrations`.`app`, `django_migrations`.`name`, `django_migrations`.`applied` FROM `django_migrations`; args=(); alias=default
D:\PycharmProjects\Django_Test\Django_Test\settings.py changed, reloading.
Watching for file changes with StatReloader
D:\PycharmProjects\Django_Test\Django_Test\settings.py changed, reloading.
Watching for file changes with StatReloader
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) 
            SELECT
                table_name,
                table_type,
                table_comment
            FROM information_schema.tables
            WHERE table_schema = DATABASE()
            ; args=None; alias=default
(0.000) SELECT `django_migrations`.`id`, `django_migrations`.`app`, `django_migrations`.`name`, `django_migrations`.`applied` FROM `django_migrations`; args=(); alias=default
D:\PycharmProjects\Django_Test\app_test\books.py changed, reloading.
Watching for file changes with StatReloader
D:\PycharmProjects\Django_Test\app_test\books.py changed, reloading.
Watching for file changes with StatReloader
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) 
            SELECT
                table_name,
                table_type,
                table_comment
            FROM information_schema.tables
            WHERE table_schema = DATABASE()
            ; args=None; alias=default
(0.000) SELECT `django_migrations`.`id`, `django_migrations`.`app`, `django_migrations`.`name`, `django_migrations`.`applied` FROM `django_migrations`; args=(); alias=default
(0.000) 
                SELECT VERSION(),
                       @@sql_mode,
                       @@default_storage_engine,
                       @@sql_auto_is_null,
                       @@lower_case_table_names,
                       CONVERT_TZ('2001-01-01 01:00:00', 'UTC', 'UTC') IS NOT NULL
            ; args=None; alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 49 LIMIT 21; args=(49,); alias=default
Not Found: /delete_book/static/js/jquery-3.7.0.min.js
Not Found: /delete_book/static/plugins/bootstrap-3.4.1/js/bootstrap.min.js
Not Found: /delete_book/static/plugins/font-awesome-4.7.0/css/font-awesome.css
Not Found: /delete_book/static/plugins/bootstrap-3.4.1/css/bootstrap.css
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book` WHERE `book`.`book_id` = 49 LIMIT 21; args=(49,); alias=default
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None; alias=default
(0.000) SELECT `book`.`book_id`, `book`.`book_title`, `book`.`category_id`, `book`.`author`, `book`.`book_copies`, `book`.`book_pub`, `book`.`publisher_name`, `book`.`isbn`, `book`.`copyright_year`, `book`.`date_receive`, `book`.`date_added`, `book`.`status` FROM `book`; args=(); alias=default
